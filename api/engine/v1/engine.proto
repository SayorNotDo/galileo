syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";



package api.engine.v1;

option go_package = "galileo/api/engine/v1;v1";
option java_multiple_files = true;
option java_package = "api.engine.v1";

service Engine {
  /* 任务调度相关 */
  rpc AddDefaultJob(AddDefaultJobRequest) returns (google.protobuf.Empty);
  rpc AddPeriodicJob(AddPeriodicJobRequest) returns (AddPeriodicJobReply);
  rpc AddDelayedJob(AddDelayedJobRequest) returns (google.protobuf.Empty);
  rpc RemoveJob(RemoveJobRequest) returns (RemoveJobReply);

  /* 容器相关 */
  rpc CreateContainer(CreateContainerRequest) returns (CreateContainerReply);
  rpc ListContainers(ListContainerRequest) returns (ListContainersReply);
  rpc InspectContainer(InspectContainerRequest) returns (InspectContainerReply);
}

message Job {
  int64 taskId = 1;
}

message RemoveJobRequest {
  int64 id = 1;
}

message RemoveJobReply {}

message AddDefaultJobRequest {
  int64 taskId = 1;
  uint32 worker = 2;
  bytes config = 3;
}

message AddPeriodicJobRequest {
  int64 taskId = 1;
  uint32 worker = 2;
  int32  type = 3;
  google.protobuf.Timestamp scheduleTime = 4;
  Frequency frequency = 5;
}

message AddPeriodicJobReply {

}

message AddDelayedJobRequest {
  int64 taskID = 1;
  uint32 worker = 2;
  bytes config = 3;
  google.protobuf.Timestamp delayedTime = 4;
}

message InspectContainerRequest {
  string id = 1;
}

message InspectContainerReply {
  Container container = 1;
}

message ListContainerRequest {
  bool all = 1;
  int32 limit = 2;
  bool size = 3;
  map<string, StringList> filters = 4;
  message StringList {
    repeated string values = 1;
  }
}

message ListContainersReply {
  repeated Container container = 1;
}

message Container {
  message Names {
    repeated string name = 1;
  }
  string id = 1;
  string name = 2;
  string image = 3;
  string imageID = 4;
  repeated string cmd = 5;
  string created = 6;
  message ExposedPorts {
    string port = 1;
    string type = 2;
  }
  repeated ExposedPorts exposedPorts = 7;
  map<string, string> labels = 8;
  string state = 9;
  string status = 10;
  message HostConfig {
    string networkMode = 1;
  }
  HostConfig hostConfig = 11;
  message NetworkSetting {
    message Networks {
    }
  }
  message Mounts {
    repeated Mount mounts = 1;

    message Mount {

    }
  }
  Mounts mounts = 12;
  string hostname = 13;
  string domainname = 14;
}

message UpdateCronJobReply {
  int64 executeId = 1;
}


enum Frequency {
  DAILY = 0;
  WEEKLY = 1;
  MONTHLY = 2;
}

message CreateContainerRequest {}

message CreateContainerReply {
  string id = 1;
  string warning = 2;
}

