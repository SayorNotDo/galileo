// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: api/management/testcase/v1/testcase.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoadFrameworkRequestLanguage int32

const (
	LoadFrameworkRequest_Python     LoadFrameworkRequestLanguage = 0
	LoadFrameworkRequest_Javascript LoadFrameworkRequestLanguage = 1
	LoadFrameworkRequest_Golang     LoadFrameworkRequestLanguage = 2
)

// Enum value maps for LoadFrameworkRequestLanguage.
var (
	LoadFrameworkRequestLanguage_name = map[int32]string{
		0: "Python",
		1: "Javascript",
		2: "Golang",
	}
	LoadFrameworkRequestLanguage_value = map[string]int32{
		"Python":     0,
		"Javascript": 1,
		"Golang":     2,
	}
)

func (x LoadFrameworkRequestLanguage) Enum() *LoadFrameworkRequestLanguage {
	p := new(LoadFrameworkRequestLanguage)
	*p = x
	return p
}

func (x LoadFrameworkRequestLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoadFrameworkRequestLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_api_management_testcase_v1_testcase_proto_enumTypes[0].Descriptor()
}

func (LoadFrameworkRequestLanguage) Type() protoreflect.EnumType {
	return &file_api_management_testcase_v1_testcase_proto_enumTypes[0]
}

func (x LoadFrameworkRequestLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoadFrameworkRequestLanguage.Descriptor instead.
func (LoadFrameworkRequestLanguage) EnumDescriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{2, 0}
}

type GenerateTestcaseFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GenerateTestcaseFileRequest) Reset() {
	*x = GenerateTestcaseFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTestcaseFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTestcaseFileRequest) ProtoMessage() {}

func (x *GenerateTestcaseFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTestcaseFileRequest.ProtoReflect.Descriptor instead.
func (*GenerateTestcaseFileRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateTestcaseFileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenerateTestcaseFileRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GenerateTestcaseFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type GenerateTestcaseFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateTestcaseFileReply) Reset() {
	*x = GenerateTestcaseFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTestcaseFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTestcaseFileReply) ProtoMessage() {}

func (x *GenerateTestcaseFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTestcaseFileReply.ProtoReflect.Descriptor instead.
func (*GenerateTestcaseFileReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{1}
}

type LoadFrameworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string                       `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Lang   LoadFrameworkRequestLanguage `protobuf:"varint,2,opt,name=lang,proto3,enum=api.management.testcase.LoadFrameworkRequestLanguage" json:"lang,omitempty"`
	Config []byte                       `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *LoadFrameworkRequest) Reset() {
	*x = LoadFrameworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadFrameworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadFrameworkRequest) ProtoMessage() {}

func (x *LoadFrameworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadFrameworkRequest.ProtoReflect.Descriptor instead.
func (*LoadFrameworkRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{2}
}

func (x *LoadFrameworkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LoadFrameworkRequest) GetLang() LoadFrameworkRequestLanguage {
	if x != nil {
		return x.Lang
	}
	return LoadFrameworkRequest_Python
}

func (x *LoadFrameworkRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type LoadFrameworkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Worker  string `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *LoadFrameworkReply) Reset() {
	*x = LoadFrameworkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadFrameworkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadFrameworkReply) ProtoMessage() {}

func (x *LoadFrameworkReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadFrameworkReply.ProtoReflect.Descriptor instead.
func (*LoadFrameworkReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{3}
}

func (x *LoadFrameworkReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoadFrameworkReply) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type DebugTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *DebugTestcaseRequest) Reset() {
	*x = DebugTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugTestcaseRequest) ProtoMessage() {}

func (x *DebugTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugTestcaseRequest.ProtoReflect.Descriptor instead.
func (*DebugTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{4}
}

func (x *DebugTestcaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DebugTestcaseRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DebugTestcaseRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type DebugTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DebugTestcaseReply) Reset() {
	*x = DebugTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugTestcaseReply) ProtoMessage() {}

func (x *DebugTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugTestcaseReply.ProtoReflect.Descriptor instead.
func (*DebugTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{5}
}

type UploadTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UploadTestcaseReply) Reset() {
	*x = UploadTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTestcaseReply) ProtoMessage() {}

func (x *UploadTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTestcaseReply.ProtoReflect.Descriptor instead.
func (*UploadTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{6}
}

func (x *UploadTestcaseReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status      int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Type        int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Priority    int32  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateTestcaseRequest) Reset() {
	*x = CreateTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestcaseRequest) ProtoMessage() {}

func (x *CreateTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestcaseRequest.ProtoReflect.Descriptor instead.
func (*CreateTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTestcaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTestcaseRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateTestcaseRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateTestcaseRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateTestcaseRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateTestcaseRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateTestcaseReply) Reset() {
	*x = CreateTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestcaseReply) ProtoMessage() {}

func (x *CreateTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestcaseReply.ProtoReflect.Descriptor instead.
func (*CreateTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTestcaseReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTestcaseReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type UpdateTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Priority    int32  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateTestcaseRequest) Reset() {
	*x = UpdateTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestcaseRequest) ProtoMessage() {}

func (x *UpdateTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestcaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTestcaseRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTestcaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTestcaseRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateTestcaseRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateTestcaseRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateTestcaseRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateTestcaseReply) Reset() {
	*x = UpdateTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestcaseReply) ProtoMessage() {}

func (x *UpdateTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestcaseReply.ProtoReflect.Descriptor instead.
func (*UpdateTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTestcaseReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTestcaseRequest) Reset() {
	*x = DeleteTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestcaseRequest) ProtoMessage() {}

func (x *DeleteTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestcaseRequest.ProtoReflect.Descriptor instead.
func (*DeleteTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{11}
}

type DeleteTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTestcaseReply) Reset() {
	*x = DeleteTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestcaseReply) ProtoMessage() {}

func (x *DeleteTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestcaseReply.ProtoReflect.Descriptor instead.
func (*DeleteTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{12}
}

type GetTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTestcaseRequest) Reset() {
	*x = GetTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcaseRequest) ProtoMessage() {}

func (x *GetTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcaseRequest.ProtoReflect.Descriptor instead.
func (*GetTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{13}
}

func (x *GetTestcaseRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt   int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy   uint32 `protobuf:"varint,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdateAt    int64  `protobuf:"varint,4,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
	UpdateBy    uint32 `protobuf:"varint,5,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Type        int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Priority    int32  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	Status      int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Url         string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GetTestcaseReply) Reset() {
	*x = GetTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcaseReply) ProtoMessage() {}

func (x *GetTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcaseReply.ProtoReflect.Descriptor instead.
func (*GetTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{14}
}

func (x *GetTestcaseReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTestcaseReply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetTestcaseReply) GetCreatedBy() uint32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *GetTestcaseReply) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *GetTestcaseReply) GetUpdateBy() uint32 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *GetTestcaseReply) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetTestcaseReply) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *GetTestcaseReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetTestcaseReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetTestcaseReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTestcaseRequest) Reset() {
	*x = ListTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestcaseRequest) ProtoMessage() {}

func (x *ListTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestcaseRequest.ProtoReflect.Descriptor instead.
func (*ListTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{15}
}

type ListTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTestcaseReply) Reset() {
	*x = ListTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestcaseReply) ProtoMessage() {}

func (x *ListTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_testcase_v1_testcase_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestcaseReply.ProtoReflect.Descriptor instead.
func (*ListTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_testcase_v1_testcase_proto_rawDescGZIP(), []int{16}
}

var File_api_management_testcase_v1_testcase_proto protoreflect.FileDescriptor

var file_api_management_testcase_v1_testcase_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc2,
	0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x32, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x79, 0x74, 0x68, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x61, 0x76, 0x61, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x10, 0x02, 0x22, 0x46, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x14, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x0a, 0x13, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x9f, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x8c, 0x09,
	0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x34, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x3a, 0x01, 0x2a, 0x1a, 0x0f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x87, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61,
	0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x68,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x2c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5a, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x8d, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x12, 0x95, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x45, 0x0a, 0x1a,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x25, 0x67, 0x61,
	0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_management_testcase_v1_testcase_proto_rawDescOnce sync.Once
	file_api_management_testcase_v1_testcase_proto_rawDescData = file_api_management_testcase_v1_testcase_proto_rawDesc
)

func file_api_management_testcase_v1_testcase_proto_rawDescGZIP() []byte {
	file_api_management_testcase_v1_testcase_proto_rawDescOnce.Do(func() {
		file_api_management_testcase_v1_testcase_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_management_testcase_v1_testcase_proto_rawDescData)
	})
	return file_api_management_testcase_v1_testcase_proto_rawDescData
}

var file_api_management_testcase_v1_testcase_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_management_testcase_v1_testcase_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_management_testcase_v1_testcase_proto_goTypes = []interface{}{
	(LoadFrameworkRequestLanguage)(0),   // 0: api.management.testcase.LoadFrameworkRequest.language
	(*GenerateTestcaseFileRequest)(nil), // 1: api.management.testcase.GenerateTestcaseFileRequest
	(*GenerateTestcaseFileReply)(nil),   // 2: api.management.testcase.GenerateTestcaseFileReply
	(*LoadFrameworkRequest)(nil),        // 3: api.management.testcase.LoadFrameworkRequest
	(*LoadFrameworkReply)(nil),          // 4: api.management.testcase.LoadFrameworkReply
	(*DebugTestcaseRequest)(nil),        // 5: api.management.testcase.DebugTestcaseRequest
	(*DebugTestcaseReply)(nil),          // 6: api.management.testcase.DebugTestcaseReply
	(*UploadTestcaseReply)(nil),         // 7: api.management.testcase.UploadTestcaseReply
	(*CreateTestcaseRequest)(nil),       // 8: api.management.testcase.CreateTestcaseRequest
	(*CreateTestcaseReply)(nil),         // 9: api.management.testcase.CreateTestcaseReply
	(*UpdateTestcaseRequest)(nil),       // 10: api.management.testcase.UpdateTestcaseRequest
	(*UpdateTestcaseReply)(nil),         // 11: api.management.testcase.UpdateTestcaseReply
	(*DeleteTestcaseRequest)(nil),       // 12: api.management.testcase.DeleteTestcaseRequest
	(*DeleteTestcaseReply)(nil),         // 13: api.management.testcase.DeleteTestcaseReply
	(*GetTestcaseRequest)(nil),          // 14: api.management.testcase.GetTestcaseRequest
	(*GetTestcaseReply)(nil),            // 15: api.management.testcase.GetTestcaseReply
	(*ListTestcaseRequest)(nil),         // 16: api.management.testcase.ListTestcaseRequest
	(*ListTestcaseReply)(nil),           // 17: api.management.testcase.ListTestcaseReply
	(*timestamppb.Timestamp)(nil),       // 18: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 19: google.protobuf.Empty
}
var file_api_management_testcase_v1_testcase_proto_depIdxs = []int32{
	0,  // 0: api.management.testcase.LoadFrameworkRequest.lang:type_name -> api.management.testcase.LoadFrameworkRequest.language
	18, // 1: api.management.testcase.CreateTestcaseReply.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 2: api.management.testcase.Testcase.CreateTestcase:input_type -> api.management.testcase.CreateTestcaseRequest
	1,  // 3: api.management.testcase.Testcase.GenerateTestcase:input_type -> api.management.testcase.GenerateTestcaseFileRequest
	10, // 4: api.management.testcase.Testcase.UpdateTestcase:input_type -> api.management.testcase.UpdateTestcaseRequest
	12, // 5: api.management.testcase.Testcase.DeleteTestcase:input_type -> api.management.testcase.DeleteTestcaseRequest
	14, // 6: api.management.testcase.Testcase.GetTestcaseById:input_type -> api.management.testcase.GetTestcaseRequest
	16, // 7: api.management.testcase.Testcase.ListTestcase:input_type -> api.management.testcase.ListTestcaseRequest
	19, // 8: api.management.testcase.Testcase.UploadTestcaseFile:input_type -> google.protobuf.Empty
	5,  // 9: api.management.testcase.Testcase.DebugTestcase:input_type -> api.management.testcase.DebugTestcaseRequest
	3,  // 10: api.management.testcase.Testcase.LoadFramework:input_type -> api.management.testcase.LoadFrameworkRequest
	9,  // 11: api.management.testcase.Testcase.CreateTestcase:output_type -> api.management.testcase.CreateTestcaseReply
	2,  // 12: api.management.testcase.Testcase.GenerateTestcase:output_type -> api.management.testcase.GenerateTestcaseFileReply
	11, // 13: api.management.testcase.Testcase.UpdateTestcase:output_type -> api.management.testcase.UpdateTestcaseReply
	13, // 14: api.management.testcase.Testcase.DeleteTestcase:output_type -> api.management.testcase.DeleteTestcaseReply
	15, // 15: api.management.testcase.Testcase.GetTestcaseById:output_type -> api.management.testcase.GetTestcaseReply
	17, // 16: api.management.testcase.Testcase.ListTestcase:output_type -> api.management.testcase.ListTestcaseReply
	7,  // 17: api.management.testcase.Testcase.UploadTestcaseFile:output_type -> api.management.testcase.UploadTestcaseReply
	6,  // 18: api.management.testcase.Testcase.DebugTestcase:output_type -> api.management.testcase.DebugTestcaseReply
	4,  // 19: api.management.testcase.Testcase.LoadFramework:output_type -> api.management.testcase.LoadFrameworkReply
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_management_testcase_v1_testcase_proto_init() }
func file_api_management_testcase_v1_testcase_proto_init() {
	if File_api_management_testcase_v1_testcase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_management_testcase_v1_testcase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTestcaseFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTestcaseFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadFrameworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadFrameworkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_testcase_v1_testcase_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_management_testcase_v1_testcase_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_management_testcase_v1_testcase_proto_goTypes,
		DependencyIndexes: file_api_management_testcase_v1_testcase_proto_depIdxs,
		EnumInfos:         file_api_management_testcase_v1_testcase_proto_enumTypes,
		MessageInfos:      file_api_management_testcase_v1_testcase_proto_msgTypes,
	}.Build()
	File_api_management_testcase_v1_testcase_proto = out.File
	file_api_management_testcase_v1_testcase_proto_rawDesc = nil
	file_api_management_testcase_v1_testcase_proto_goTypes = nil
	file_api_management_testcase_v1_testcase_proto_depIdxs = nil
}
