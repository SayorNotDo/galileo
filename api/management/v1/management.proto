syntax = "proto3";

package api.management.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "galileo/api/management/v1;v1";
option java_multiple_files = true;
option java_package = "api.management.v1";

service Management {
  rpc BaseInformation(google.protobuf.Empty) returns (BaseInfoReply) {
    option (google.api.http) = {
      get: "v1/api/management/info"
    };
  }
  rpc CreateTestPlan (CreateTestPlanRequest) returns (CreateTestPlanReply) {
    option (google.api.http) = {
      post: "v1/api/management/testplan"
      body: "*"
    };
  };
  rpc UpdateTestPlan (UpdateTestPlanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "v1/api/management/testplan"
      body: "*"
    };
  }
  rpc GetTestPlaById (GetTestPlanRequest) returns (GetTestPlanReply) {
    option (google.api.http) = {
      get: "v1/api/management/testplan/{id}"
    };
  }

  /* project module */
  rpc CreateProject (CreateProjectRequest) returns (CreateProjectReply) {
    option(google.api.http) = {
      post: "v1/api/management/project"
      body: "*"
    };
  };
  rpc UpdateProject (UpdateProjectRequest) returns (google.protobuf.Empty){
    option(google.api.http) = {
      put: "v1/api/management/project"
      body: "*"
    };
  };
  rpc DeleteProject (DeleteProjectRequest) returns (DeleteProjectReply);
  rpc GetProject (GetProjectRequest) returns (ProjectInfo) {
    option(google.api.http) = {
      get: "v1/api/management/project/{id}"
    };
  };
  rpc ListProject (ListProjectRequest) returns (ListProjectReply);

  rpc GetUserProjectList (google.protobuf.Empty) returns (ListProjectReply);

  /* testcase module */
  rpc CreateTestcase (CreateTestcaseRequest) returns (CreateTestcaseReply) {
    option(google.api.http) = {
      post: "v1/api/management/testcase"
      body: "*"
    };
  };
  rpc GenerateTestcase (GenerateTestcaseFileRequest) returns (GenerateTestcaseFileReply) {}
  rpc UpdateTestcase (UpdateTestcaseRequest) returns (UpdateTestcaseReply) {
    option(google.api.http) = {
      put: "v1/api/management/testcase"
      body: "*"
    };
  };
  rpc DeleteTestcase (DeleteTestcaseRequest) returns (DeleteTestcaseReply);
  rpc GetTestcaseById (GetTestcaseRequest) returns (GetTestcaseReply){
    option(google.api.http) = {
      get: "v1/api/management/testcase/{id}"
    };
  };
  rpc ListTestcase (ListTestcaseRequest) returns (ListTestcaseReply);
//  rpc UploadTestcaseFile (google.protobuf.Empty) returns (UploadTestcaseReply);
  rpc DebugTestcase (DebugTestcaseRequest) returns (DebugTestcaseReply){
    option(google.api.http) = {
      post: "v1/api/management/testcase/debug"
      body: "*"
    };
  };
  rpc LoadFramework (LoadFrameworkRequest) returns (LoadFrameworkReply){
    option(google.api.http) = {
      post: "v1/api/management/testcase/loadFramework"
      body: "*"
    };
  };
  rpc CreateTestcaseSuite (CreateTestcaseSuiteRequest) returns (CreateTestcaseSuiteReply) {
    option(google.api.http) = {
      post: "v1/api/management/case-suite",
      body: "*"
    };
  }
  rpc GetTestcaseSuite (GetTestcaseSuiteRequest) returns (GetTestcaseSuiteReply) {}

  /* task module */
  rpc CreateTask (CreateTaskRequest) returns (CreateTaskReply){
    option(google.api.http) = {
      post: "v1/api/management/task"
      body: "*"
    };
  };
  rpc UpdateTask (UpdateTaskRequest) returns (google.protobuf.Empty){
    option(google.api.http) = {
      put: "v1/api/management/task"
      body: "*"
    };
  };
  rpc DeleteTask (DeleteTaskRequest) returns (DeleteTaskReply);
  rpc TaskByID (TaskByIDRequest) returns (GetTaskReply){
    option(google.api.http) = {
      get: "v1/api/management/task/{id}"
    };
  };
  rpc TaskByName (TaskByNameRequest) returns (GetTaskReply) {
    option(google.api.http) = {
      get: "v1/api/management/task/{name}"
    };
  }
  rpc ListTimingTask (ListTimingTaskRequest) returns (ListTimingTaskReply);
  rpc UpdateTaskStatus (UpdateTaskStatusRequest) returns (UpdateTaskStatusReply){
    option(google.api.http) = {
      put: "v1/api/management/task/status"
      body: "*"
    };
  };
  rpc GetTaskProgress (TaskProgressRequest) returns (TaskProgressReply) {
    option(google.api.http) = {
      get: "v1/api/management/task/{id}/progress"
    };
  };

  /* API */
  rpc CreateApi (CreateApiRequest) returns (CreateApiReply){
    option (google.api.http) = {
      post: "v1/api/management/interface"
      body: "*"
    };
  };
  rpc UpdateApi (UpdateApiRequest) returns (UpdateApiReply){
    option (google.api.http) = {
      put: "v1/api/management/interface"
      body: "*"
    };
  };
  rpc DeleteApi (DeleteApiRequest) returns (DeleteApiReply);
  rpc GetApi (GetApiRequest) returns (GetApiReply);
  rpc DebugApi (DebugApiRequest) returns (DebugApiReply);
  rpc ListApi (ListApiRequest) returns (ListApiReply){
    option (google.api.http) = {
      get: "v1/api/management/interface/list/{pageNum}/{pageSize}"
    };
  };
}

message BaseInfoApiRequest {}
message BaseInfoApiReply {}

message DebugApiRequest {
  string network = 1;
  ApiInfo apiInfo = 2;
}
message DebugApiReply {}

enum MethodType {
  GET = 0;
  POST = 1;
  PUT = 2;
  DELETE = 3;
  PATCH = 4;
  OPTIONS = 5;
  HEAD = 6;
}

message CreateApiRequest {
  ApiInfo apiInfo = 1;
}
message CreateApiReply {
  int32 id = 1;
  int64 createdAt = 2;
}

message ApiInfo {
  string name = 1;
  string url = 2;
  MethodType type = 3;
  int32 status = 4;
  string label = 6;
  string body = 7;
  string queryParams = 8;
  string response = 9;
  string module = 10;
  string description = 11;
}

message UpdateApiRequest {
  int32 id = 1;
  ApiInfo apiInfo = 2;
}
message UpdateApiReply {
  bool success = 1;
  int32 UpdateAt = 2;
}

message DeleteApiRequest {}
message DeleteApiReply {}

message GetApiRequest {}
message GetApiReply {}

message ListApiRequest {
  int32 pageNum = 1;
  int32 pageSize = 2;
}
message ListApiReply {}

message TaskProgressRequest {
  int32 id = 1;
}

message TaskProgressReply {
  int32 progress = 1;
  progressDetail detail = 2;
}

message progressDetail {
  int32 failure = 1;
  int32 success = 2;
  int32 error = 3;
  int32 unknown = 4;
}

message UpdateTaskStatusRequest {
  int32 id = 1;
  taskStatus status = 2;
  string worker = 3;
}

message UpdateTaskStatusReply {
  taskStatus status = 1;
  google.protobuf.Timestamp statusUpdatedAt = 2;
}

message CreateTaskRequest {
  string name = 1;
  int32 rank = 2;
  int32 type = 3;
  frequency frequency = 4;
  google.protobuf.Timestamp scheduleTime = 5;
  string worker = 6;
  string config = 7;
  string description = 8;
  uint32 assignee = 9;
  google.protobuf.Timestamp deadline = 11;
  repeated int32 testcaseSuiteId = 12;
  int32 testPlanId = 13;
}

enum frequency {
  DAILY = 0;
  WEEKLY = 1;
  MONTHLY = 2;
}

enum taskStatus {
  NEW = 0;
  PENDING = 1;
  RUNNING = 2;
  PAUSED = 3;
  CLOSED = 4;
  EXCEPTION = 5;
  CANCELLED = 6;
  FINISHED = 7;
}

message CreateTaskReply {
  int32 id = 1;
  taskStatus status = 2;
  google.protobuf.Timestamp createdAt = 3;
}

message UpdateTaskRequest {
  int32 id = 1;
  string name = 2;
  uint32 assignee = 3;
  int32 type = 4;
  int32 rank = 5;
  string config = 6;
  frequency frequency = 7;
  google.protobuf.Timestamp scheduleTime = 8;
  google.protobuf.Timestamp deadline = 10;
  string description = 11;
  repeated int32 testcaseSuiteId = 12;
  string worker = 13;
}

message UpdateTaskReply {
  bool success = 1;
}

message DeleteTaskRequest {}
message DeleteTaskReply {}

message TaskByIDRequest {
  int32 id = 1;
}

message TaskByNameRequest {
  string name = 1;
}

message GetTaskReply {
  string name = 1;
  int32 rank = 2;
  int32 type = 3;
  string description = 4;
  repeated int32 testcaseSuite = 5;
  taskStatus status = 6;
  string config = 7;
  frequency frequency = 8;
  google.protobuf.Timestamp startTime = 11;
  google.protobuf.Timestamp scheduleTime = 9;
  google.protobuf.Timestamp deadline = 10;
  uint32 assignee = 12;
  string worker = 13;
  int32 id = 14;
}

message TaskInfo {
  int32 id = 1;
  string name = 2;
  int32 rank = 3;
  int32 type = 4;
  taskStatus status = 5;
  string worker = 6;
  google.protobuf.Timestamp scheduleTime = 7;
  google.protobuf.Timestamp startTime = 8;
  google.protobuf.Timestamp deadline = 10;
  uint32 assignee = 12;
  frequency frequency = 13;
  string config = 14;
  repeated int32 testcaseSuiteId = 15;
}

message ListTimingTaskRequest {
  repeated taskStatus status = 1;
}

message ListTimingTaskReply {
  repeated TaskInfo taskList = 1;
}

message GetTestcaseSuiteRequest {
  int32 id = 1;
}

message GetTestcaseSuiteReply {
  int32 id = 1;
  string name = 2;
  google.protobuf.Timestamp createdAt = 3;
  uint32 createdBy = 4;
  google.protobuf.Timestamp updatedAt = 5;
  uint32 updatedBy = 6;
  repeated TestcaseInfo testcaseInfo = 7;
}

message CreateTestcaseSuiteRequest {
  string name = 1;
  repeated int32 testcaseList = 2;
}

message CreateTestcaseSuiteReply {
  int32 id = 1;
  google.protobuf.Timestamp createdAt = 2;
}



message LoadFrameworkRequest {
  string path = 1;
  enum language{
    Python = 0;
    Javascript = 1;
    Golang = 2;
  }
  language lang = 2;
  bytes config = 3;
};

message LoadFrameworkReply {
  bool success = 1;
  string worker = 2;
};

message DebugTestcaseRequest {
  string name = 1;
  string type = 2;
  string content = 3;
};

message DebugTestcaseReply {
  string result = 1;
};

message UploadTestcaseReply {
  string url = 1;
};



message UpdateTestcaseRequest {
  int32 id = 1;
  string name = 2;
  int32 type = 3;
  int32 priority = 4;
  string url = 5;
  string description = 6;
}
message UpdateTestcaseReply {
  bool success = 1;
}

message DeleteTestcaseRequest {}
message DeleteTestcaseReply {}

message GetTestcaseRequest {
  int32 id = 1;
}

message TestcaseInfo {
  int32 id = 1;
  string name = 2;
  google.protobuf.Timestamp createdAt = 3;
  uint32 createdBy = 4;
  google.protobuf.Timestamp updatedAt = 5;
  uint32 updatedBy = 6;
  int32 type = 7;
  int32 priority = 8;
  int32 status = 9;
  string url = 10;
  string description = 11;
}


message GetTestcaseReply {
  TestcaseInfo testcaseInfo = 1;
}

message ListTestcaseRequest {}
message ListTestcaseReply {}

message GenerateTestcaseFileRequest {
  string name = 1;
  int32 type = 2;
  bytes content = 3;
};

message GenerateTestcaseFileReply {};

message CreateTestcaseRequest {
  string name = 1;
  int32 status = 2;
  int32 type = 3;
  int32 priority = 4;
  string url = 5;
  string description = 6;
}

message CreateTestcaseReply {
  int32 id = 1;
  google.protobuf.Timestamp createdAt = 2;
}
message UpdateProjectReply {}

message DeleteProjectRequest {}
message DeleteProjectReply {}

message GetProjectRequest {
  int32 id = 1;
}

message ListProjectRequest {}

message CreateProjectRequest {
  string name = 1;
  string identifier = 2;
  string description = 3;
  google.protobuf.Timestamp startTime = 4;
  google.protobuf.Timestamp endTime = 5;
  string remark = 6;
}

message CreateProjectReply {
  int32 id = 1;
}

message UpdateProjectRequest {
  int32 id = 1;
  string name = 2;
  string identifier = 3;
  Status status = 4;
  google.protobuf.Timestamp startTime = 5;
  google.protobuf.Timestamp endTime = 6;
  string description = 7;
  string remark = 8;
}

message ListProjectReply {
  int32 total = 1;
  repeated ProjectInfo projectList = 2;
}

message ProjectInfo {
  int32 id = 1;
  string name = 2;
  string identifier = 3;
  string remark = 4;
  Status status = 5;
  string description = 6;
  google.protobuf.Timestamp createdAt = 7;
  uint32 createdBy = 8;
  google.protobuf.Timestamp updatedAt = 9;
  uint32 updatedBy = 10;
  google.protobuf.Timestamp deletedAt = 11;
  uint32 deletedBy = 12;
  google.protobuf.Timestamp startTime = 13;
  google.protobuf.Timestamp deadline = 14;
}

enum Status {
  TODO = 0;
  INPROGRESS = 1;
  DELAY = 2;
  BLOCKED = 3;
  COMPLETED = 4;
  TERMINATED = 5;
}

message GetTestPlanRequest {
  int32 id = 1;
}

message GetTestPlanReply {
  int32 id = 1;
  string name = 2;
  google.protobuf.Timestamp createdAt = 3;
  uint32 createdBy = 4;
  google.protobuf.Timestamp updatedAt = 5;
  uint32 updatedBy = 6;
  string description = 7;
  google.protobuf.Timestamp startTime = 8;
  google.protobuf.Timestamp deadline = 9;
  google.protobuf.Timestamp statusUpdatedAt = 10;
  Status status = 11;
  repeated int32 tasks = 12;
  int32 projectId = 13;
}

message UpdateTestPlanRequest {
  int32 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Timestamp startTime = 4;
  google.protobuf.Timestamp deadline = 5;
  Status status = 6;
  repeated int32 tasks = 7;
}


message BaseInfoReply {
  int32 apiCount = 1;
  int32 sceneCaseCount = 2;
  int32 apiCaseCount = 3;
  int32 cronJobCount = 4;
};



message CreateTestPlanRequest {
  string name = 1;
  string description = 2;
  google.protobuf.Timestamp startTime = 3;
  google.protobuf.Timestamp deadline = 4;
  int32 projectId = 5;
  repeated int32 tasks = 6;
}

message CreateTestPlanReply {
  int32 id = 1;
}