// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: api/management/v1/management.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MethodType int32

const (
	MethodType_GET     MethodType = 0
	MethodType_POST    MethodType = 1
	MethodType_PUT     MethodType = 2
	MethodType_DELETE  MethodType = 3
	MethodType_PATCH   MethodType = 4
	MethodType_OPTIONS MethodType = 5
	MethodType_HEAD    MethodType = 6
)

// Enum value maps for MethodType.
var (
	MethodType_name = map[int32]string{
		0: "GET",
		1: "POST",
		2: "PUT",
		3: "DELETE",
		4: "PATCH",
		5: "OPTIONS",
		6: "HEAD",
	}
	MethodType_value = map[string]int32{
		"GET":     0,
		"POST":    1,
		"PUT":     2,
		"DELETE":  3,
		"PATCH":   4,
		"OPTIONS": 5,
		"HEAD":    6,
	}
)

func (x MethodType) Enum() *MethodType {
	p := new(MethodType)
	*p = x
	return p
}

func (x MethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_management_v1_management_proto_enumTypes[0].Descriptor()
}

func (MethodType) Type() protoreflect.EnumType {
	return &file_api_management_v1_management_proto_enumTypes[0]
}

func (x MethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MethodType.Descriptor instead.
func (MethodType) EnumDescriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{0}
}

type Frequency int32

const (
	Frequency_DAILY   Frequency = 0
	Frequency_WEEKLY  Frequency = 1
	Frequency_MONTHLY Frequency = 2
)

// Enum value maps for Frequency.
var (
	Frequency_name = map[int32]string{
		0: "DAILY",
		1: "WEEKLY",
		2: "MONTHLY",
	}
	Frequency_value = map[string]int32{
		"DAILY":   0,
		"WEEKLY":  1,
		"MONTHLY": 2,
	}
)

func (x Frequency) Enum() *Frequency {
	p := new(Frequency)
	*p = x
	return p
}

func (x Frequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frequency) Descriptor() protoreflect.EnumDescriptor {
	return file_api_management_v1_management_proto_enumTypes[1].Descriptor()
}

func (Frequency) Type() protoreflect.EnumType {
	return &file_api_management_v1_management_proto_enumTypes[1]
}

func (x Frequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frequency.Descriptor instead.
func (Frequency) EnumDescriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{1}
}

type TaskStatus int32

const (
	TaskStatus_NEW       TaskStatus = 0
	TaskStatus_PENDING   TaskStatus = 1
	TaskStatus_RUNNING   TaskStatus = 2
	TaskStatus_PAUSED    TaskStatus = 3
	TaskStatus_CLOSED    TaskStatus = 4
	TaskStatus_EXCEPTION TaskStatus = 5
	TaskStatus_CANCELLED TaskStatus = 6
	TaskStatus_FINISHED  TaskStatus = 7
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "NEW",
		1: "PENDING",
		2: "RUNNING",
		3: "PAUSED",
		4: "CLOSED",
		5: "EXCEPTION",
		6: "CANCELLED",
		7: "FINISHED",
	}
	TaskStatus_value = map[string]int32{
		"NEW":       0,
		"PENDING":   1,
		"RUNNING":   2,
		"PAUSED":    3,
		"CLOSED":    4,
		"EXCEPTION": 5,
		"CANCELLED": 6,
		"FINISHED":  7,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_management_v1_management_proto_enumTypes[2].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_api_management_v1_management_proto_enumTypes[2]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{2}
}

type Status int32

const (
	Status_TODO       Status = 0
	Status_INPROGRESS Status = 1
	Status_DELAY      Status = 2
	Status_BLOCKED    Status = 3
	Status_COMPLETED  Status = 4
	Status_TERMINATED Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "TODO",
		1: "INPROGRESS",
		2: "DELAY",
		3: "BLOCKED",
		4: "COMPLETED",
		5: "TERMINATED",
	}
	Status_value = map[string]int32{
		"TODO":       0,
		"INPROGRESS": 1,
		"DELAY":      2,
		"BLOCKED":    3,
		"COMPLETED":  4,
		"TERMINATED": 5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_management_v1_management_proto_enumTypes[3].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_api_management_v1_management_proto_enumTypes[3]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{3}
}

type LoadFrameworkRequestLanguage int32

const (
	LoadFrameworkRequest_Python     LoadFrameworkRequestLanguage = 0
	LoadFrameworkRequest_Javascript LoadFrameworkRequestLanguage = 1
	LoadFrameworkRequest_Golang     LoadFrameworkRequestLanguage = 2
)

// Enum value maps for LoadFrameworkRequestLanguage.
var (
	LoadFrameworkRequestLanguage_name = map[int32]string{
		0: "Python",
		1: "Javascript",
		2: "Golang",
	}
	LoadFrameworkRequestLanguage_value = map[string]int32{
		"Python":     0,
		"Javascript": 1,
		"Golang":     2,
	}
)

func (x LoadFrameworkRequestLanguage) Enum() *LoadFrameworkRequestLanguage {
	p := new(LoadFrameworkRequestLanguage)
	*p = x
	return p
}

func (x LoadFrameworkRequestLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoadFrameworkRequestLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_api_management_v1_management_proto_enumTypes[4].Descriptor()
}

func (LoadFrameworkRequestLanguage) Type() protoreflect.EnumType {
	return &file_api_management_v1_management_proto_enumTypes[4]
}

func (x LoadFrameworkRequestLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoadFrameworkRequestLanguage.Descriptor instead.
func (LoadFrameworkRequestLanguage) EnumDescriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{36, 0}
}

type BaseInfoApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaseInfoApiRequest) Reset() {
	*x = BaseInfoApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseInfoApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseInfoApiRequest) ProtoMessage() {}

func (x *BaseInfoApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseInfoApiRequest.ProtoReflect.Descriptor instead.
func (*BaseInfoApiRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{0}
}

type BaseInfoApiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaseInfoApiReply) Reset() {
	*x = BaseInfoApiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseInfoApiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseInfoApiReply) ProtoMessage() {}

func (x *BaseInfoApiReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseInfoApiReply.ProtoReflect.Descriptor instead.
func (*BaseInfoApiReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{1}
}

type DebugApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	ApiInfo *ApiInfo `protobuf:"bytes,2,opt,name=apiInfo,proto3" json:"apiInfo,omitempty"`
}

func (x *DebugApiRequest) Reset() {
	*x = DebugApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugApiRequest) ProtoMessage() {}

func (x *DebugApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugApiRequest.ProtoReflect.Descriptor instead.
func (*DebugApiRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{2}
}

func (x *DebugApiRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DebugApiRequest) GetApiInfo() *ApiInfo {
	if x != nil {
		return x.ApiInfo
	}
	return nil
}

type DebugApiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DebugApiReply) Reset() {
	*x = DebugApiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugApiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugApiReply) ProtoMessage() {}

func (x *DebugApiReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugApiReply.ProtoReflect.Descriptor instead.
func (*DebugApiReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{3}
}

type CreateApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiInfo *ApiInfo `protobuf:"bytes,1,opt,name=apiInfo,proto3" json:"apiInfo,omitempty"`
}

func (x *CreateApiRequest) Reset() {
	*x = CreateApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiRequest) ProtoMessage() {}

func (x *CreateApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiRequest.ProtoReflect.Descriptor instead.
func (*CreateApiRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{4}
}

func (x *CreateApiRequest) GetApiInfo() *ApiInfo {
	if x != nil {
		return x.ApiInfo
	}
	return nil
}

type CreateApiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64 `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateApiReply) Reset() {
	*x = CreateApiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiReply) ProtoMessage() {}

func (x *CreateApiReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiReply.ProtoReflect.Descriptor instead.
func (*CreateApiReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{5}
}

func (x *CreateApiReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateApiReply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url         string     `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Type        MethodType `protobuf:"varint,3,opt,name=type,proto3,enum=api.management.v1.MethodType" json:"type,omitempty"`
	Status      int32      `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Label       string     `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Body        string     `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	QueryParams string     `protobuf:"bytes,8,opt,name=queryParams,proto3" json:"queryParams,omitempty"`
	Response    string     `protobuf:"bytes,9,opt,name=response,proto3" json:"response,omitempty"`
	Module      string     `protobuf:"bytes,10,opt,name=module,proto3" json:"module,omitempty"`
	Description string     `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ApiInfo) Reset() {
	*x = ApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfo) ProtoMessage() {}

func (x *ApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfo.ProtoReflect.Descriptor instead.
func (*ApiInfo) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{6}
}

func (x *ApiInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ApiInfo) GetType() MethodType {
	if x != nil {
		return x.Type
	}
	return MethodType_GET
}

func (x *ApiInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ApiInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ApiInfo) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ApiInfo) GetQueryParams() string {
	if x != nil {
		return x.QueryParams
	}
	return ""
}

func (x *ApiInfo) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *ApiInfo) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *ApiInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ApiInfo *ApiInfo `protobuf:"bytes,2,opt,name=apiInfo,proto3" json:"apiInfo,omitempty"`
}

func (x *UpdateApiRequest) Reset() {
	*x = UpdateApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiRequest) ProtoMessage() {}

func (x *UpdateApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateApiRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateApiRequest) GetApiInfo() *ApiInfo {
	if x != nil {
		return x.ApiInfo
	}
	return nil
}

type UpdateApiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	UpdateAt int32 `protobuf:"varint,2,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
}

func (x *UpdateApiReply) Reset() {
	*x = UpdateApiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiReply) ProtoMessage() {}

func (x *UpdateApiReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiReply.ProtoReflect.Descriptor instead.
func (*UpdateApiReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateApiReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateApiReply) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type DeleteApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteApiRequest) Reset() {
	*x = DeleteApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiRequest) ProtoMessage() {}

func (x *DeleteApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiRequest.ProtoReflect.Descriptor instead.
func (*DeleteApiRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{9}
}

type DeleteApiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteApiReply) Reset() {
	*x = DeleteApiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiReply) ProtoMessage() {}

func (x *DeleteApiReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiReply.ProtoReflect.Descriptor instead.
func (*DeleteApiReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{10}
}

type GetApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetApiRequest) Reset() {
	*x = GetApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiRequest) ProtoMessage() {}

func (x *GetApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiRequest.ProtoReflect.Descriptor instead.
func (*GetApiRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{11}
}

type GetApiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetApiReply) Reset() {
	*x = GetApiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiReply) ProtoMessage() {}

func (x *GetApiReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiReply.ProtoReflect.Descriptor instead.
func (*GetApiReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{12}
}

type ListApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListApiRequest) Reset() {
	*x = ListApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiRequest) ProtoMessage() {}

func (x *ListApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiRequest.ProtoReflect.Descriptor instead.
func (*ListApiRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{13}
}

func (x *ListApiRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListApiRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListApiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListApiReply) Reset() {
	*x = ListApiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiReply) ProtoMessage() {}

func (x *ListApiReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiReply.ProtoReflect.Descriptor instead.
func (*ListApiReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{14}
}

type TaskProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TaskProgressRequest) Reset() {
	*x = TaskProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgressRequest) ProtoMessage() {}

func (x *TaskProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgressRequest.ProtoReflect.Descriptor instead.
func (*TaskProgressRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{15}
}

func (x *TaskProgressRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TaskProgressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int32           `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"`
	Detail   *ProgressDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *TaskProgressReply) Reset() {
	*x = TaskProgressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskProgressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgressReply) ProtoMessage() {}

func (x *TaskProgressReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgressReply.ProtoReflect.Descriptor instead.
func (*TaskProgressReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{16}
}

func (x *TaskProgressReply) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskProgressReply) GetDetail() *ProgressDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type ProgressDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure int32 `protobuf:"varint,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Success int32 `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   int32 `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
	Unknown int32 `protobuf:"varint,4,opt,name=unknown,proto3" json:"unknown,omitempty"`
}

func (x *ProgressDetail) Reset() {
	*x = ProgressDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressDetail) ProtoMessage() {}

func (x *ProgressDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressDetail.ProtoReflect.Descriptor instead.
func (*ProgressDetail) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{17}
}

func (x *ProgressDetail) GetFailure() int32 {
	if x != nil {
		return x.Failure
	}
	return 0
}

func (x *ProgressDetail) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *ProgressDetail) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *ProgressDetail) GetUnknown() int32 {
	if x != nil {
		return x.Unknown
	}
	return 0
}

type UpdateTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status TaskStatus `protobuf:"varint,2,opt,name=status,proto3,enum=api.management.v1.TaskStatus" json:"status,omitempty"`
	Worker string     `protobuf:"bytes,3,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *UpdateTaskStatusRequest) Reset() {
	*x = UpdateTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusRequest) ProtoMessage() {}

func (x *UpdateTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateTaskStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTaskStatusRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NEW
}

func (x *UpdateTaskStatusRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type UpdateTaskStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=api.management.v1.TaskStatus" json:"status,omitempty"`
	StatusUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=statusUpdatedAt,proto3" json:"statusUpdatedAt,omitempty"`
}

func (x *UpdateTaskStatusReply) Reset() {
	*x = UpdateTaskStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusReply) ProtoMessage() {}

func (x *UpdateTaskStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusReply.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTaskStatusReply) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NEW
}

func (x *UpdateTaskStatusReply) GetStatusUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusUpdatedAt
	}
	return nil
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rank            int32                  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Type            int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Frequency       Frequency              `protobuf:"varint,4,opt,name=frequency,proto3,enum=api.management.v1.Frequency" json:"frequency,omitempty"`
	ScheduleTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=scheduleTime,proto3" json:"scheduleTime,omitempty"`
	Worker          string                 `protobuf:"bytes,6,opt,name=worker,proto3" json:"worker,omitempty"`
	Config          string                 `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	Description     string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Assignee        uint32                 `protobuf:"varint,9,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Deadline        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=deadline,proto3" json:"deadline,omitempty"`
	TestcaseSuiteId []int32                `protobuf:"varint,12,rep,packed,name=testcaseSuiteId,proto3" json:"testcaseSuiteId,omitempty"`
	TestPlanId      int32                  `protobuf:"varint,13,opt,name=testPlanId,proto3" json:"testPlanId,omitempty"`
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{20}
}

func (x *CreateTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTaskRequest) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *CreateTaskRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateTaskRequest) GetFrequency() Frequency {
	if x != nil {
		return x.Frequency
	}
	return Frequency_DAILY
}

func (x *CreateTaskRequest) GetScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

func (x *CreateTaskRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *CreateTaskRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *CreateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskRequest) GetAssignee() uint32 {
	if x != nil {
		return x.Assignee
	}
	return 0
}

func (x *CreateTaskRequest) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *CreateTaskRequest) GetTestcaseSuiteId() []int32 {
	if x != nil {
		return x.TestcaseSuiteId
	}
	return nil
}

func (x *CreateTaskRequest) GetTestPlanId() int32 {
	if x != nil {
		return x.TestPlanId
	}
	return 0
}

type CreateTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=api.management.v1.TaskStatus" json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateTaskReply) Reset() {
	*x = CreateTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskReply) ProtoMessage() {}

func (x *CreateTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskReply.ProtoReflect.Descriptor instead.
func (*CreateTaskReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{21}
}

func (x *CreateTaskReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTaskReply) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NEW
}

func (x *CreateTaskReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Assignee        uint32                 `protobuf:"varint,3,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Type            int32                  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Rank            int32                  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	Config          string                 `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	Frequency       Frequency              `protobuf:"varint,7,opt,name=frequency,proto3,enum=api.management.v1.Frequency" json:"frequency,omitempty"`
	ScheduleTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=scheduleTime,proto3" json:"scheduleTime,omitempty"`
	Deadline        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Description     string                 `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	TestcaseSuiteId []int32                `protobuf:"varint,12,rep,packed,name=testcaseSuiteId,proto3" json:"testcaseSuiteId,omitempty"`
	Worker          string                 `protobuf:"bytes,13,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateTaskRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTaskRequest) GetAssignee() uint32 {
	if x != nil {
		return x.Assignee
	}
	return 0
}

func (x *UpdateTaskRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateTaskRequest) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *UpdateTaskRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *UpdateTaskRequest) GetFrequency() Frequency {
	if x != nil {
		return x.Frequency
	}
	return Frequency_DAILY
}

func (x *UpdateTaskRequest) GetScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

func (x *UpdateTaskRequest) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *UpdateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTaskRequest) GetTestcaseSuiteId() []int32 {
	if x != nil {
		return x.TestcaseSuiteId
	}
	return nil
}

func (x *UpdateTaskRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type UpdateTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateTaskReply) Reset() {
	*x = UpdateTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskReply) ProtoMessage() {}

func (x *UpdateTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskReply.ProtoReflect.Descriptor instead.
func (*UpdateTaskReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateTaskReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{24}
}

type DeleteTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTaskReply) Reset() {
	*x = DeleteTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskReply) ProtoMessage() {}

func (x *DeleteTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskReply.ProtoReflect.Descriptor instead.
func (*DeleteTaskReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{25}
}

type TaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TaskByIDRequest) Reset() {
	*x = TaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskByIDRequest) ProtoMessage() {}

func (x *TaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskByIDRequest.ProtoReflect.Descriptor instead.
func (*TaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{26}
}

func (x *TaskByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TaskByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TaskByNameRequest) Reset() {
	*x = TaskByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskByNameRequest) ProtoMessage() {}

func (x *TaskByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskByNameRequest.ProtoReflect.Descriptor instead.
func (*TaskByNameRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{27}
}

func (x *TaskByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rank          int32                  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	TestcaseSuite []int32                `protobuf:"varint,5,rep,packed,name=testcaseSuite,proto3" json:"testcaseSuite,omitempty"`
	Status        TaskStatus             `protobuf:"varint,6,opt,name=status,proto3,enum=api.management.v1.TaskStatus" json:"status,omitempty"`
	Config        string                 `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	Frequency     Frequency              `protobuf:"varint,8,opt,name=frequency,proto3,enum=api.management.v1.Frequency" json:"frequency,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=startTime,proto3" json:"startTime,omitempty"`
	ScheduleTime  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=scheduleTime,proto3" json:"scheduleTime,omitempty"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Assignee      uint32                 `protobuf:"varint,12,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Worker        string                 `protobuf:"bytes,13,opt,name=worker,proto3" json:"worker,omitempty"`
	Id            int32                  `protobuf:"varint,14,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTaskReply) Reset() {
	*x = GetTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskReply) ProtoMessage() {}

func (x *GetTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskReply.ProtoReflect.Descriptor instead.
func (*GetTaskReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{28}
}

func (x *GetTaskReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTaskReply) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GetTaskReply) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetTaskReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTaskReply) GetTestcaseSuite() []int32 {
	if x != nil {
		return x.TestcaseSuite
	}
	return nil
}

func (x *GetTaskReply) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NEW
}

func (x *GetTaskReply) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *GetTaskReply) GetFrequency() Frequency {
	if x != nil {
		return x.Frequency
	}
	return Frequency_DAILY
}

func (x *GetTaskReply) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetTaskReply) GetScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

func (x *GetTaskReply) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *GetTaskReply) GetAssignee() uint32 {
	if x != nil {
		return x.Assignee
	}
	return 0
}

func (x *GetTaskReply) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *GetTaskReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rank            int32                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	Type            int32                  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Status          TaskStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=api.management.v1.TaskStatus" json:"status,omitempty"`
	Worker          string                 `protobuf:"bytes,6,opt,name=worker,proto3" json:"worker,omitempty"`
	ScheduleTime    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=scheduleTime,proto3" json:"scheduleTime,omitempty"`
	StartTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Deadline        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Assignee        uint32                 `protobuf:"varint,12,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Frequency       Frequency              `protobuf:"varint,13,opt,name=frequency,proto3,enum=api.management.v1.Frequency" json:"frequency,omitempty"`
	Config          string                 `protobuf:"bytes,14,opt,name=config,proto3" json:"config,omitempty"`
	TestcaseSuiteId []int32                `protobuf:"varint,15,rep,packed,name=testcaseSuiteId,proto3" json:"testcaseSuiteId,omitempty"`
}

func (x *TaskInfo) Reset() {
	*x = TaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInfo) ProtoMessage() {}

func (x *TaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInfo.ProtoReflect.Descriptor instead.
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{29}
}

func (x *TaskInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskInfo) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *TaskInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TaskInfo) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NEW
}

func (x *TaskInfo) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *TaskInfo) GetScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

func (x *TaskInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TaskInfo) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *TaskInfo) GetAssignee() uint32 {
	if x != nil {
		return x.Assignee
	}
	return 0
}

func (x *TaskInfo) GetFrequency() Frequency {
	if x != nil {
		return x.Frequency
	}
	return Frequency_DAILY
}

func (x *TaskInfo) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *TaskInfo) GetTestcaseSuiteId() []int32 {
	if x != nil {
		return x.TestcaseSuiteId
	}
	return nil
}

type ListTimingTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []TaskStatus `protobuf:"varint,1,rep,packed,name=status,proto3,enum=api.management.v1.TaskStatus" json:"status,omitempty"`
}

func (x *ListTimingTaskRequest) Reset() {
	*x = ListTimingTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimingTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimingTaskRequest) ProtoMessage() {}

func (x *ListTimingTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimingTaskRequest.ProtoReflect.Descriptor instead.
func (*ListTimingTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{30}
}

func (x *ListTimingTaskRequest) GetStatus() []TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListTimingTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskList []*TaskInfo `protobuf:"bytes,1,rep,name=taskList,proto3" json:"taskList,omitempty"`
}

func (x *ListTimingTaskReply) Reset() {
	*x = ListTimingTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimingTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimingTaskReply) ProtoMessage() {}

func (x *ListTimingTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimingTaskReply.ProtoReflect.Descriptor instead.
func (*ListTimingTaskReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{31}
}

func (x *ListTimingTaskReply) GetTaskList() []*TaskInfo {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type GetTestcaseSuiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTestcaseSuiteRequest) Reset() {
	*x = GetTestcaseSuiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcaseSuiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcaseSuiteRequest) ProtoMessage() {}

func (x *GetTestcaseSuiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcaseSuiteRequest.ProtoReflect.Descriptor instead.
func (*GetTestcaseSuiteRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{32}
}

func (x *GetTestcaseSuiteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTestcaseSuiteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy    uint32                 `protobuf:"varint,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy    uint32                 `protobuf:"varint,6,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	TestcaseInfo []*TestcaseInfo        `protobuf:"bytes,7,rep,name=testcaseInfo,proto3" json:"testcaseInfo,omitempty"`
}

func (x *GetTestcaseSuiteReply) Reset() {
	*x = GetTestcaseSuiteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcaseSuiteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcaseSuiteReply) ProtoMessage() {}

func (x *GetTestcaseSuiteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcaseSuiteReply.ProtoReflect.Descriptor instead.
func (*GetTestcaseSuiteReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{33}
}

func (x *GetTestcaseSuiteReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTestcaseSuiteReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTestcaseSuiteReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTestcaseSuiteReply) GetCreatedBy() uint32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *GetTestcaseSuiteReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetTestcaseSuiteReply) GetUpdatedBy() uint32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *GetTestcaseSuiteReply) GetTestcaseInfo() []*TestcaseInfo {
	if x != nil {
		return x.TestcaseInfo
	}
	return nil
}

type CreateTestcaseSuiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TestcaseList []int32 `protobuf:"varint,2,rep,packed,name=testcaseList,proto3" json:"testcaseList,omitempty"`
}

func (x *CreateTestcaseSuiteRequest) Reset() {
	*x = CreateTestcaseSuiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestcaseSuiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestcaseSuiteRequest) ProtoMessage() {}

func (x *CreateTestcaseSuiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestcaseSuiteRequest.ProtoReflect.Descriptor instead.
func (*CreateTestcaseSuiteRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{34}
}

func (x *CreateTestcaseSuiteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTestcaseSuiteRequest) GetTestcaseList() []int32 {
	if x != nil {
		return x.TestcaseList
	}
	return nil
}

type CreateTestcaseSuiteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateTestcaseSuiteReply) Reset() {
	*x = CreateTestcaseSuiteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestcaseSuiteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestcaseSuiteReply) ProtoMessage() {}

func (x *CreateTestcaseSuiteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestcaseSuiteReply.ProtoReflect.Descriptor instead.
func (*CreateTestcaseSuiteReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{35}
}

func (x *CreateTestcaseSuiteReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTestcaseSuiteReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type LoadFrameworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string                       `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Lang   LoadFrameworkRequestLanguage `protobuf:"varint,2,opt,name=lang,proto3,enum=api.management.v1.LoadFrameworkRequestLanguage" json:"lang,omitempty"`
	Config []byte                       `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *LoadFrameworkRequest) Reset() {
	*x = LoadFrameworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadFrameworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadFrameworkRequest) ProtoMessage() {}

func (x *LoadFrameworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadFrameworkRequest.ProtoReflect.Descriptor instead.
func (*LoadFrameworkRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{36}
}

func (x *LoadFrameworkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LoadFrameworkRequest) GetLang() LoadFrameworkRequestLanguage {
	if x != nil {
		return x.Lang
	}
	return LoadFrameworkRequest_Python
}

func (x *LoadFrameworkRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type LoadFrameworkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Worker  string `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *LoadFrameworkReply) Reset() {
	*x = LoadFrameworkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadFrameworkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadFrameworkReply) ProtoMessage() {}

func (x *LoadFrameworkReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadFrameworkReply.ProtoReflect.Descriptor instead.
func (*LoadFrameworkReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{37}
}

func (x *LoadFrameworkReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoadFrameworkReply) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type DebugTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *DebugTestcaseRequest) Reset() {
	*x = DebugTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugTestcaseRequest) ProtoMessage() {}

func (x *DebugTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugTestcaseRequest.ProtoReflect.Descriptor instead.
func (*DebugTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{38}
}

func (x *DebugTestcaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DebugTestcaseRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DebugTestcaseRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DebugTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DebugTestcaseReply) Reset() {
	*x = DebugTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugTestcaseReply) ProtoMessage() {}

func (x *DebugTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugTestcaseReply.ProtoReflect.Descriptor instead.
func (*DebugTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{39}
}

func (x *DebugTestcaseReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type UploadTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UploadTestcaseReply) Reset() {
	*x = UploadTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTestcaseReply) ProtoMessage() {}

func (x *UploadTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTestcaseReply.ProtoReflect.Descriptor instead.
func (*UploadTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{40}
}

func (x *UploadTestcaseReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UpdateTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Priority    int32  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateTestcaseRequest) Reset() {
	*x = UpdateTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestcaseRequest) ProtoMessage() {}

func (x *UpdateTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestcaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateTestcaseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTestcaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTestcaseRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateTestcaseRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateTestcaseRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateTestcaseRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateTestcaseReply) Reset() {
	*x = UpdateTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestcaseReply) ProtoMessage() {}

func (x *UpdateTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestcaseReply.ProtoReflect.Descriptor instead.
func (*UpdateTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateTestcaseReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTestcaseRequest) Reset() {
	*x = DeleteTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestcaseRequest) ProtoMessage() {}

func (x *DeleteTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestcaseRequest.ProtoReflect.Descriptor instead.
func (*DeleteTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{43}
}

type DeleteTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTestcaseReply) Reset() {
	*x = DeleteTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestcaseReply) ProtoMessage() {}

func (x *DeleteTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestcaseReply.ProtoReflect.Descriptor instead.
func (*DeleteTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{44}
}

type GetTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTestcaseRequest) Reset() {
	*x = GetTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcaseRequest) ProtoMessage() {}

func (x *GetTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcaseRequest.ProtoReflect.Descriptor instead.
func (*GetTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{45}
}

func (x *GetTestcaseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TestcaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy   uint32                 `protobuf:"varint,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy   uint32                 `protobuf:"varint,6,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	Type        int32                  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Priority    int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	Status      int32                  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Url         string                 `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	Description string                 `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TestcaseInfo) Reset() {
	*x = TestcaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestcaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestcaseInfo) ProtoMessage() {}

func (x *TestcaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestcaseInfo.ProtoReflect.Descriptor instead.
func (*TestcaseInfo) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{46}
}

func (x *TestcaseInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestcaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestcaseInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TestcaseInfo) GetCreatedBy() uint32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *TestcaseInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TestcaseInfo) GetUpdatedBy() uint32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *TestcaseInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TestcaseInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TestcaseInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TestcaseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TestcaseInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestcaseInfo *TestcaseInfo `protobuf:"bytes,1,opt,name=testcaseInfo,proto3" json:"testcaseInfo,omitempty"`
}

func (x *GetTestcaseReply) Reset() {
	*x = GetTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcaseReply) ProtoMessage() {}

func (x *GetTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcaseReply.ProtoReflect.Descriptor instead.
func (*GetTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{47}
}

func (x *GetTestcaseReply) GetTestcaseInfo() *TestcaseInfo {
	if x != nil {
		return x.TestcaseInfo
	}
	return nil
}

type ListTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTestcaseRequest) Reset() {
	*x = ListTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestcaseRequest) ProtoMessage() {}

func (x *ListTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestcaseRequest.ProtoReflect.Descriptor instead.
func (*ListTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{48}
}

type ListTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTestcaseReply) Reset() {
	*x = ListTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestcaseReply) ProtoMessage() {}

func (x *ListTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestcaseReply.ProtoReflect.Descriptor instead.
func (*ListTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{49}
}

type GenerateTestcaseFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GenerateTestcaseFileRequest) Reset() {
	*x = GenerateTestcaseFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTestcaseFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTestcaseFileRequest) ProtoMessage() {}

func (x *GenerateTestcaseFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTestcaseFileRequest.ProtoReflect.Descriptor instead.
func (*GenerateTestcaseFileRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{50}
}

func (x *GenerateTestcaseFileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenerateTestcaseFileRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GenerateTestcaseFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type GenerateTestcaseFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateTestcaseFileReply) Reset() {
	*x = GenerateTestcaseFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTestcaseFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTestcaseFileReply) ProtoMessage() {}

func (x *GenerateTestcaseFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTestcaseFileReply.ProtoReflect.Descriptor instead.
func (*GenerateTestcaseFileReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{51}
}

type CreateTestcaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status      int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Type        int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Priority    int32  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateTestcaseRequest) Reset() {
	*x = CreateTestcaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestcaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestcaseRequest) ProtoMessage() {}

func (x *CreateTestcaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestcaseRequest.ProtoReflect.Descriptor instead.
func (*CreateTestcaseRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{52}
}

func (x *CreateTestcaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTestcaseRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateTestcaseRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateTestcaseRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateTestcaseRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateTestcaseRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateTestcaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateTestcaseReply) Reset() {
	*x = CreateTestcaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestcaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestcaseReply) ProtoMessage() {}

func (x *CreateTestcaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestcaseReply.ProtoReflect.Descriptor instead.
func (*CreateTestcaseReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{53}
}

func (x *CreateTestcaseReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTestcaseReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type UpdateProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProjectReply) Reset() {
	*x = UpdateProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectReply) ProtoMessage() {}

func (x *UpdateProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectReply.ProtoReflect.Descriptor instead.
func (*UpdateProjectReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{54}
}

type DeleteProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProjectRequest) Reset() {
	*x = DeleteProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRequest) ProtoMessage() {}

func (x *DeleteProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{55}
}

type DeleteProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProjectReply) Reset() {
	*x = DeleteProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectReply) ProtoMessage() {}

func (x *DeleteProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectReply.ProtoReflect.Descriptor instead.
func (*DeleteProjectReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{56}
}

type GetProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectRequest) Reset() {
	*x = GetProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRequest) ProtoMessage() {}

func (x *GetProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{57}
}

func (x *GetProjectRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProjectRequest) Reset() {
	*x = ListProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRequest) ProtoMessage() {}

func (x *ListProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRequest.ProtoReflect.Descriptor instead.
func (*ListProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{58}
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Identifier  string                 `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Remark      string                 `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{59}
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateProjectRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateProjectRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateProjectReply) Reset() {
	*x = CreateProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectReply) ProtoMessage() {}

func (x *CreateProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectReply.ProtoReflect.Descriptor instead.
func (*CreateProjectReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{60}
}

func (x *CreateProjectReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Identifier  string                 `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Status      Status                 `protobuf:"varint,4,opt,name=status,proto3,enum=api.management.v1.Status" json:"status,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Description string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Remark      string                 `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateProjectRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProjectRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *UpdateProjectRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_TODO
}

func (x *UpdateProjectRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateProjectRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateProjectRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ProjectList []*ProjectInfo `protobuf:"bytes,2,rep,name=projectList,proto3" json:"projectList,omitempty"`
}

func (x *ListProjectReply) Reset() {
	*x = ListProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectReply) ProtoMessage() {}

func (x *ListProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectReply.ProtoReflect.Descriptor instead.
func (*ListProjectReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{62}
}

func (x *ListProjectReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProjectReply) GetProjectList() []*ProjectInfo {
	if x != nil {
		return x.ProjectList
	}
	return nil
}

type ProjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Identifier  string                 `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Remark      string                 `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	Status      Status                 `protobuf:"varint,5,opt,name=status,proto3,enum=api.management.v1.Status" json:"status,omitempty"`
	Description string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy   uint32                 `protobuf:"varint,8,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy   uint32                 `protobuf:"varint,10,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	DeletedBy   uint32                 `protobuf:"varint,12,opt,name=deletedBy,proto3" json:"deletedBy,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Deadline    *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{63}
}

func (x *ProjectInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ProjectInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ProjectInfo) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_TODO
}

func (x *ProjectInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProjectInfo) GetCreatedBy() uint32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *ProjectInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ProjectInfo) GetUpdatedBy() uint32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *ProjectInfo) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *ProjectInfo) GetDeletedBy() uint32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

func (x *ProjectInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ProjectInfo) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type GetTestPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTestPlanRequest) Reset() {
	*x = GetTestPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestPlanRequest) ProtoMessage() {}

func (x *GetTestPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestPlanRequest.ProtoReflect.Descriptor instead.
func (*GetTestPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{64}
}

func (x *GetTestPlanRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTestPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy       uint32                 `protobuf:"varint,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy       uint32                 `protobuf:"varint,6,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	Description     string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	StartTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Deadline        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=deadline,proto3" json:"deadline,omitempty"`
	StatusUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=statusUpdatedAt,proto3" json:"statusUpdatedAt,omitempty"`
	Status          Status                 `protobuf:"varint,11,opt,name=status,proto3,enum=api.management.v1.Status" json:"status,omitempty"`
	Tasks           []int32                `protobuf:"varint,12,rep,packed,name=tasks,proto3" json:"tasks,omitempty"`
	ProjectId       int32                  `protobuf:"varint,13,opt,name=projectId,proto3" json:"projectId,omitempty"`
}

func (x *GetTestPlanReply) Reset() {
	*x = GetTestPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestPlanReply) ProtoMessage() {}

func (x *GetTestPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestPlanReply.ProtoReflect.Descriptor instead.
func (*GetTestPlanReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{65}
}

func (x *GetTestPlanReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTestPlanReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTestPlanReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTestPlanReply) GetCreatedBy() uint32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *GetTestPlanReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetTestPlanReply) GetUpdatedBy() uint32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *GetTestPlanReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTestPlanReply) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetTestPlanReply) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *GetTestPlanReply) GetStatusUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusUpdatedAt
	}
	return nil
}

func (x *GetTestPlanReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_TODO
}

func (x *GetTestPlanReply) GetTasks() []int32 {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *GetTestPlanReply) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type UpdateTestPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Deadline    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Status      Status                 `protobuf:"varint,6,opt,name=status,proto3,enum=api.management.v1.Status" json:"status,omitempty"`
	Tasks       []int32                `protobuf:"varint,7,rep,packed,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *UpdateTestPlanRequest) Reset() {
	*x = UpdateTestPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestPlanRequest) ProtoMessage() {}

func (x *UpdateTestPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateTestPlanRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTestPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTestPlanRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTestPlanRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateTestPlanRequest) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *UpdateTestPlanRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_TODO
}

func (x *UpdateTestPlanRequest) GetTasks() []int32 {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type BaseInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiCount       int32 `protobuf:"varint,1,opt,name=apiCount,proto3" json:"apiCount,omitempty"`
	SceneCaseCount int32 `protobuf:"varint,2,opt,name=sceneCaseCount,proto3" json:"sceneCaseCount,omitempty"`
	ApiCaseCount   int32 `protobuf:"varint,3,opt,name=apiCaseCount,proto3" json:"apiCaseCount,omitempty"`
	CronJobCount   int32 `protobuf:"varint,4,opt,name=cronJobCount,proto3" json:"cronJobCount,omitempty"`
}

func (x *BaseInfoReply) Reset() {
	*x = BaseInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseInfoReply) ProtoMessage() {}

func (x *BaseInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseInfoReply.ProtoReflect.Descriptor instead.
func (*BaseInfoReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{67}
}

func (x *BaseInfoReply) GetApiCount() int32 {
	if x != nil {
		return x.ApiCount
	}
	return 0
}

func (x *BaseInfoReply) GetSceneCaseCount() int32 {
	if x != nil {
		return x.SceneCaseCount
	}
	return 0
}

func (x *BaseInfoReply) GetApiCaseCount() int32 {
	if x != nil {
		return x.ApiCaseCount
	}
	return 0
}

func (x *BaseInfoReply) GetCronJobCount() int32 {
	if x != nil {
		return x.CronJobCount
	}
	return 0
}

type CreateTestPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Deadline    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ProjectId   int32                  `protobuf:"varint,5,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Tasks       []int32                `protobuf:"varint,6,rep,packed,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *CreateTestPlanRequest) Reset() {
	*x = CreateTestPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestPlanRequest) ProtoMessage() {}

func (x *CreateTestPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestPlanRequest.ProtoReflect.Descriptor instead.
func (*CreateTestPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{68}
}

func (x *CreateTestPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTestPlanRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTestPlanRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateTestPlanRequest) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *CreateTestPlanRequest) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateTestPlanRequest) GetTasks() []int32 {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CreateTestPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTestPlanReply) Reset() {
	*x = CreateTestPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_management_v1_management_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestPlanReply) ProtoMessage() {}

func (x *CreateTestPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_management_v1_management_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestPlanReply.ProtoReflect.Descriptor instead.
func (*CreateTestPlanReply) Descriptor() ([]byte, []int) {
	return file_api_management_v1_management_proto_rawDescGZIP(), []int{69}
}

func (x *CreateTestPlanReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_api_management_v1_management_proto protoreflect.FileDescriptor

var file_api_management_v1_management_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x61, 0x0a,
	0x0f, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x70,
	0x69, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x48, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9c, 0x02, 0x0a, 0x07,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x31, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x12, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x46, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x0a, 0x13, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x6a, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x74, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x22, 0x78, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x94, 0x01,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44,
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xbb, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xab, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a,
	0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x09,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53,
	0x75, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x0a, 0x0f, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a,
	0x11, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x04, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x09, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf1, 0x03, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61,
	0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x22, 0x4e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x4e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53,
	0x75, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb0, 0x02, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x43, 0x0a, 0x0c, 0x74, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x54,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x4c,
	0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x32, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x4a, 0x61, 0x76, 0x61, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x47, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x10, 0x02, 0x22, 0x46, 0x0a, 0x12, 0x4c, 0x6f, 0x61,
	0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x22, 0x58, 0x0a, 0x14, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x13, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xde, 0x02, 0x0a, 0x0c,
	0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x43, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xa7, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf4, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb7, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x6a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb8, 0x04, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa7, 0x04,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x98, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x70, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x43,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x43,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x61, 0x70, 0x69, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xf3, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x56, 0x0a,
	0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x47,
	0x45, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x45, 0x41, 0x44, 0x10, 0x06, 0x2a, 0x2f, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x57, 0x45, 0x45, 0x4b, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e,
	0x54, 0x48, 0x4c, 0x59, 0x10, 0x02, 0x2a, 0x73, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0c, 0x0a,
	0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x07, 0x2a, 0x59, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x44, 0x4f, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x05, 0x32, 0xd2, 0x1f, 0x0a, 0x0a, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x89, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x22, 0x1a, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x79,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x1a, 0x1a, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x12, 0x1f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x85, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x76, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x1a, 0x19, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x5f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x7a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x59,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x89, 0x01, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x1a, 0x1a, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x86, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x8c, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a,
	0x22, 0x20, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x12, 0x94, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22,
	0x28, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x9a, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74,
	0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x61, 0x73, 0x65,
	0x2d, 0x73, 0x75, 0x69, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x79, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x6d, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x3a, 0x01, 0x2a, 0x1a, 0x16, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x56, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x74, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x62, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x92, 0x01, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x1a, 0x1d, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x8d, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x7b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22,
	0x1b, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x1a, 0x1b, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x08, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x41, 0x70, 0x69, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x8c, 0x01, 0x0a,
	0x07, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x7d,
	0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x7d, 0x42, 0x33, 0x0a, 0x11, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x1c, 0x67, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_management_v1_management_proto_rawDescOnce sync.Once
	file_api_management_v1_management_proto_rawDescData = file_api_management_v1_management_proto_rawDesc
)

func file_api_management_v1_management_proto_rawDescGZIP() []byte {
	file_api_management_v1_management_proto_rawDescOnce.Do(func() {
		file_api_management_v1_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_management_v1_management_proto_rawDescData)
	})
	return file_api_management_v1_management_proto_rawDescData
}

var file_api_management_v1_management_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_management_v1_management_proto_msgTypes = make([]protoimpl.MessageInfo, 70)
var file_api_management_v1_management_proto_goTypes = []interface{}{
	(MethodType)(0),                     // 0: api.management.v1.MethodType
	(Frequency)(0),                      // 1: api.management.v1.frequency
	(TaskStatus)(0),                     // 2: api.management.v1.taskStatus
	(Status)(0),                         // 3: api.management.v1.Status
	(LoadFrameworkRequestLanguage)(0),   // 4: api.management.v1.LoadFrameworkRequest.language
	(*BaseInfoApiRequest)(nil),          // 5: api.management.v1.BaseInfoApiRequest
	(*BaseInfoApiReply)(nil),            // 6: api.management.v1.BaseInfoApiReply
	(*DebugApiRequest)(nil),             // 7: api.management.v1.DebugApiRequest
	(*DebugApiReply)(nil),               // 8: api.management.v1.DebugApiReply
	(*CreateApiRequest)(nil),            // 9: api.management.v1.CreateApiRequest
	(*CreateApiReply)(nil),              // 10: api.management.v1.CreateApiReply
	(*ApiInfo)(nil),                     // 11: api.management.v1.ApiInfo
	(*UpdateApiRequest)(nil),            // 12: api.management.v1.UpdateApiRequest
	(*UpdateApiReply)(nil),              // 13: api.management.v1.UpdateApiReply
	(*DeleteApiRequest)(nil),            // 14: api.management.v1.DeleteApiRequest
	(*DeleteApiReply)(nil),              // 15: api.management.v1.DeleteApiReply
	(*GetApiRequest)(nil),               // 16: api.management.v1.GetApiRequest
	(*GetApiReply)(nil),                 // 17: api.management.v1.GetApiReply
	(*ListApiRequest)(nil),              // 18: api.management.v1.ListApiRequest
	(*ListApiReply)(nil),                // 19: api.management.v1.ListApiReply
	(*TaskProgressRequest)(nil),         // 20: api.management.v1.TaskProgressRequest
	(*TaskProgressReply)(nil),           // 21: api.management.v1.TaskProgressReply
	(*ProgressDetail)(nil),              // 22: api.management.v1.progressDetail
	(*UpdateTaskStatusRequest)(nil),     // 23: api.management.v1.UpdateTaskStatusRequest
	(*UpdateTaskStatusReply)(nil),       // 24: api.management.v1.UpdateTaskStatusReply
	(*CreateTaskRequest)(nil),           // 25: api.management.v1.CreateTaskRequest
	(*CreateTaskReply)(nil),             // 26: api.management.v1.CreateTaskReply
	(*UpdateTaskRequest)(nil),           // 27: api.management.v1.UpdateTaskRequest
	(*UpdateTaskReply)(nil),             // 28: api.management.v1.UpdateTaskReply
	(*DeleteTaskRequest)(nil),           // 29: api.management.v1.DeleteTaskRequest
	(*DeleteTaskReply)(nil),             // 30: api.management.v1.DeleteTaskReply
	(*TaskByIDRequest)(nil),             // 31: api.management.v1.TaskByIDRequest
	(*TaskByNameRequest)(nil),           // 32: api.management.v1.TaskByNameRequest
	(*GetTaskReply)(nil),                // 33: api.management.v1.GetTaskReply
	(*TaskInfo)(nil),                    // 34: api.management.v1.TaskInfo
	(*ListTimingTaskRequest)(nil),       // 35: api.management.v1.ListTimingTaskRequest
	(*ListTimingTaskReply)(nil),         // 36: api.management.v1.ListTimingTaskReply
	(*GetTestcaseSuiteRequest)(nil),     // 37: api.management.v1.GetTestcaseSuiteRequest
	(*GetTestcaseSuiteReply)(nil),       // 38: api.management.v1.GetTestcaseSuiteReply
	(*CreateTestcaseSuiteRequest)(nil),  // 39: api.management.v1.CreateTestcaseSuiteRequest
	(*CreateTestcaseSuiteReply)(nil),    // 40: api.management.v1.CreateTestcaseSuiteReply
	(*LoadFrameworkRequest)(nil),        // 41: api.management.v1.LoadFrameworkRequest
	(*LoadFrameworkReply)(nil),          // 42: api.management.v1.LoadFrameworkReply
	(*DebugTestcaseRequest)(nil),        // 43: api.management.v1.DebugTestcaseRequest
	(*DebugTestcaseReply)(nil),          // 44: api.management.v1.DebugTestcaseReply
	(*UploadTestcaseReply)(nil),         // 45: api.management.v1.UploadTestcaseReply
	(*UpdateTestcaseRequest)(nil),       // 46: api.management.v1.UpdateTestcaseRequest
	(*UpdateTestcaseReply)(nil),         // 47: api.management.v1.UpdateTestcaseReply
	(*DeleteTestcaseRequest)(nil),       // 48: api.management.v1.DeleteTestcaseRequest
	(*DeleteTestcaseReply)(nil),         // 49: api.management.v1.DeleteTestcaseReply
	(*GetTestcaseRequest)(nil),          // 50: api.management.v1.GetTestcaseRequest
	(*TestcaseInfo)(nil),                // 51: api.management.v1.TestcaseInfo
	(*GetTestcaseReply)(nil),            // 52: api.management.v1.GetTestcaseReply
	(*ListTestcaseRequest)(nil),         // 53: api.management.v1.ListTestcaseRequest
	(*ListTestcaseReply)(nil),           // 54: api.management.v1.ListTestcaseReply
	(*GenerateTestcaseFileRequest)(nil), // 55: api.management.v1.GenerateTestcaseFileRequest
	(*GenerateTestcaseFileReply)(nil),   // 56: api.management.v1.GenerateTestcaseFileReply
	(*CreateTestcaseRequest)(nil),       // 57: api.management.v1.CreateTestcaseRequest
	(*CreateTestcaseReply)(nil),         // 58: api.management.v1.CreateTestcaseReply
	(*UpdateProjectReply)(nil),          // 59: api.management.v1.UpdateProjectReply
	(*DeleteProjectRequest)(nil),        // 60: api.management.v1.DeleteProjectRequest
	(*DeleteProjectReply)(nil),          // 61: api.management.v1.DeleteProjectReply
	(*GetProjectRequest)(nil),           // 62: api.management.v1.GetProjectRequest
	(*ListProjectRequest)(nil),          // 63: api.management.v1.ListProjectRequest
	(*CreateProjectRequest)(nil),        // 64: api.management.v1.CreateProjectRequest
	(*CreateProjectReply)(nil),          // 65: api.management.v1.CreateProjectReply
	(*UpdateProjectRequest)(nil),        // 66: api.management.v1.UpdateProjectRequest
	(*ListProjectReply)(nil),            // 67: api.management.v1.ListProjectReply
	(*ProjectInfo)(nil),                 // 68: api.management.v1.ProjectInfo
	(*GetTestPlanRequest)(nil),          // 69: api.management.v1.GetTestPlanRequest
	(*GetTestPlanReply)(nil),            // 70: api.management.v1.GetTestPlanReply
	(*UpdateTestPlanRequest)(nil),       // 71: api.management.v1.UpdateTestPlanRequest
	(*BaseInfoReply)(nil),               // 72: api.management.v1.BaseInfoReply
	(*CreateTestPlanRequest)(nil),       // 73: api.management.v1.CreateTestPlanRequest
	(*CreateTestPlanReply)(nil),         // 74: api.management.v1.CreateTestPlanReply
	(*timestamppb.Timestamp)(nil),       // 75: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 76: google.protobuf.Empty
}
var file_api_management_v1_management_proto_depIdxs = []int32{
	11, // 0: api.management.v1.DebugApiRequest.apiInfo:type_name -> api.management.v1.ApiInfo
	11, // 1: api.management.v1.CreateApiRequest.apiInfo:type_name -> api.management.v1.ApiInfo
	0,  // 2: api.management.v1.ApiInfo.type:type_name -> api.management.v1.MethodType
	11, // 3: api.management.v1.UpdateApiRequest.apiInfo:type_name -> api.management.v1.ApiInfo
	22, // 4: api.management.v1.TaskProgressReply.detail:type_name -> api.management.v1.progressDetail
	2,  // 5: api.management.v1.UpdateTaskStatusRequest.status:type_name -> api.management.v1.taskStatus
	2,  // 6: api.management.v1.UpdateTaskStatusReply.status:type_name -> api.management.v1.taskStatus
	75, // 7: api.management.v1.UpdateTaskStatusReply.statusUpdatedAt:type_name -> google.protobuf.Timestamp
	1,  // 8: api.management.v1.CreateTaskRequest.frequency:type_name -> api.management.v1.frequency
	75, // 9: api.management.v1.CreateTaskRequest.scheduleTime:type_name -> google.protobuf.Timestamp
	75, // 10: api.management.v1.CreateTaskRequest.deadline:type_name -> google.protobuf.Timestamp
	2,  // 11: api.management.v1.CreateTaskReply.status:type_name -> api.management.v1.taskStatus
	75, // 12: api.management.v1.CreateTaskReply.createdAt:type_name -> google.protobuf.Timestamp
	1,  // 13: api.management.v1.UpdateTaskRequest.frequency:type_name -> api.management.v1.frequency
	75, // 14: api.management.v1.UpdateTaskRequest.scheduleTime:type_name -> google.protobuf.Timestamp
	75, // 15: api.management.v1.UpdateTaskRequest.deadline:type_name -> google.protobuf.Timestamp
	2,  // 16: api.management.v1.GetTaskReply.status:type_name -> api.management.v1.taskStatus
	1,  // 17: api.management.v1.GetTaskReply.frequency:type_name -> api.management.v1.frequency
	75, // 18: api.management.v1.GetTaskReply.startTime:type_name -> google.protobuf.Timestamp
	75, // 19: api.management.v1.GetTaskReply.scheduleTime:type_name -> google.protobuf.Timestamp
	75, // 20: api.management.v1.GetTaskReply.deadline:type_name -> google.protobuf.Timestamp
	2,  // 21: api.management.v1.TaskInfo.status:type_name -> api.management.v1.taskStatus
	75, // 22: api.management.v1.TaskInfo.scheduleTime:type_name -> google.protobuf.Timestamp
	75, // 23: api.management.v1.TaskInfo.startTime:type_name -> google.protobuf.Timestamp
	75, // 24: api.management.v1.TaskInfo.deadline:type_name -> google.protobuf.Timestamp
	1,  // 25: api.management.v1.TaskInfo.frequency:type_name -> api.management.v1.frequency
	2,  // 26: api.management.v1.ListTimingTaskRequest.status:type_name -> api.management.v1.taskStatus
	34, // 27: api.management.v1.ListTimingTaskReply.taskList:type_name -> api.management.v1.TaskInfo
	75, // 28: api.management.v1.GetTestcaseSuiteReply.createdAt:type_name -> google.protobuf.Timestamp
	75, // 29: api.management.v1.GetTestcaseSuiteReply.updatedAt:type_name -> google.protobuf.Timestamp
	51, // 30: api.management.v1.GetTestcaseSuiteReply.testcaseInfo:type_name -> api.management.v1.TestcaseInfo
	75, // 31: api.management.v1.CreateTestcaseSuiteReply.createdAt:type_name -> google.protobuf.Timestamp
	4,  // 32: api.management.v1.LoadFrameworkRequest.lang:type_name -> api.management.v1.LoadFrameworkRequest.language
	75, // 33: api.management.v1.TestcaseInfo.createdAt:type_name -> google.protobuf.Timestamp
	75, // 34: api.management.v1.TestcaseInfo.updatedAt:type_name -> google.protobuf.Timestamp
	51, // 35: api.management.v1.GetTestcaseReply.testcaseInfo:type_name -> api.management.v1.TestcaseInfo
	75, // 36: api.management.v1.CreateTestcaseReply.createdAt:type_name -> google.protobuf.Timestamp
	75, // 37: api.management.v1.CreateProjectRequest.startTime:type_name -> google.protobuf.Timestamp
	75, // 38: api.management.v1.CreateProjectRequest.endTime:type_name -> google.protobuf.Timestamp
	3,  // 39: api.management.v1.UpdateProjectRequest.status:type_name -> api.management.v1.Status
	75, // 40: api.management.v1.UpdateProjectRequest.startTime:type_name -> google.protobuf.Timestamp
	75, // 41: api.management.v1.UpdateProjectRequest.endTime:type_name -> google.protobuf.Timestamp
	68, // 42: api.management.v1.ListProjectReply.projectList:type_name -> api.management.v1.ProjectInfo
	3,  // 43: api.management.v1.ProjectInfo.status:type_name -> api.management.v1.Status
	75, // 44: api.management.v1.ProjectInfo.createdAt:type_name -> google.protobuf.Timestamp
	75, // 45: api.management.v1.ProjectInfo.updatedAt:type_name -> google.protobuf.Timestamp
	75, // 46: api.management.v1.ProjectInfo.deletedAt:type_name -> google.protobuf.Timestamp
	75, // 47: api.management.v1.ProjectInfo.startTime:type_name -> google.protobuf.Timestamp
	75, // 48: api.management.v1.ProjectInfo.deadline:type_name -> google.protobuf.Timestamp
	75, // 49: api.management.v1.GetTestPlanReply.createdAt:type_name -> google.protobuf.Timestamp
	75, // 50: api.management.v1.GetTestPlanReply.updatedAt:type_name -> google.protobuf.Timestamp
	75, // 51: api.management.v1.GetTestPlanReply.startTime:type_name -> google.protobuf.Timestamp
	75, // 52: api.management.v1.GetTestPlanReply.deadline:type_name -> google.protobuf.Timestamp
	75, // 53: api.management.v1.GetTestPlanReply.statusUpdatedAt:type_name -> google.protobuf.Timestamp
	3,  // 54: api.management.v1.GetTestPlanReply.status:type_name -> api.management.v1.Status
	75, // 55: api.management.v1.UpdateTestPlanRequest.startTime:type_name -> google.protobuf.Timestamp
	75, // 56: api.management.v1.UpdateTestPlanRequest.deadline:type_name -> google.protobuf.Timestamp
	3,  // 57: api.management.v1.UpdateTestPlanRequest.status:type_name -> api.management.v1.Status
	75, // 58: api.management.v1.CreateTestPlanRequest.startTime:type_name -> google.protobuf.Timestamp
	75, // 59: api.management.v1.CreateTestPlanRequest.deadline:type_name -> google.protobuf.Timestamp
	76, // 60: api.management.v1.Management.BaseInformation:input_type -> google.protobuf.Empty
	73, // 61: api.management.v1.Management.CreateTestPlan:input_type -> api.management.v1.CreateTestPlanRequest
	71, // 62: api.management.v1.Management.UpdateTestPlan:input_type -> api.management.v1.UpdateTestPlanRequest
	69, // 63: api.management.v1.Management.GetTestPlaById:input_type -> api.management.v1.GetTestPlanRequest
	64, // 64: api.management.v1.Management.CreateProject:input_type -> api.management.v1.CreateProjectRequest
	66, // 65: api.management.v1.Management.UpdateProject:input_type -> api.management.v1.UpdateProjectRequest
	60, // 66: api.management.v1.Management.DeleteProject:input_type -> api.management.v1.DeleteProjectRequest
	62, // 67: api.management.v1.Management.GetProject:input_type -> api.management.v1.GetProjectRequest
	63, // 68: api.management.v1.Management.ListProject:input_type -> api.management.v1.ListProjectRequest
	76, // 69: api.management.v1.Management.GetUserProjectList:input_type -> google.protobuf.Empty
	57, // 70: api.management.v1.Management.CreateTestcase:input_type -> api.management.v1.CreateTestcaseRequest
	55, // 71: api.management.v1.Management.GenerateTestcase:input_type -> api.management.v1.GenerateTestcaseFileRequest
	46, // 72: api.management.v1.Management.UpdateTestcase:input_type -> api.management.v1.UpdateTestcaseRequest
	48, // 73: api.management.v1.Management.DeleteTestcase:input_type -> api.management.v1.DeleteTestcaseRequest
	50, // 74: api.management.v1.Management.GetTestcaseById:input_type -> api.management.v1.GetTestcaseRequest
	53, // 75: api.management.v1.Management.ListTestcase:input_type -> api.management.v1.ListTestcaseRequest
	43, // 76: api.management.v1.Management.DebugTestcase:input_type -> api.management.v1.DebugTestcaseRequest
	41, // 77: api.management.v1.Management.LoadFramework:input_type -> api.management.v1.LoadFrameworkRequest
	39, // 78: api.management.v1.Management.CreateTestcaseSuite:input_type -> api.management.v1.CreateTestcaseSuiteRequest
	37, // 79: api.management.v1.Management.GetTestcaseSuite:input_type -> api.management.v1.GetTestcaseSuiteRequest
	25, // 80: api.management.v1.Management.CreateTask:input_type -> api.management.v1.CreateTaskRequest
	27, // 81: api.management.v1.Management.UpdateTask:input_type -> api.management.v1.UpdateTaskRequest
	29, // 82: api.management.v1.Management.DeleteTask:input_type -> api.management.v1.DeleteTaskRequest
	31, // 83: api.management.v1.Management.TaskByID:input_type -> api.management.v1.TaskByIDRequest
	32, // 84: api.management.v1.Management.TaskByName:input_type -> api.management.v1.TaskByNameRequest
	35, // 85: api.management.v1.Management.ListTimingTask:input_type -> api.management.v1.ListTimingTaskRequest
	23, // 86: api.management.v1.Management.UpdateTaskStatus:input_type -> api.management.v1.UpdateTaskStatusRequest
	20, // 87: api.management.v1.Management.GetTaskProgress:input_type -> api.management.v1.TaskProgressRequest
	9,  // 88: api.management.v1.Management.CreateApi:input_type -> api.management.v1.CreateApiRequest
	12, // 89: api.management.v1.Management.UpdateApi:input_type -> api.management.v1.UpdateApiRequest
	14, // 90: api.management.v1.Management.DeleteApi:input_type -> api.management.v1.DeleteApiRequest
	16, // 91: api.management.v1.Management.GetApi:input_type -> api.management.v1.GetApiRequest
	7,  // 92: api.management.v1.Management.DebugApi:input_type -> api.management.v1.DebugApiRequest
	18, // 93: api.management.v1.Management.ListApi:input_type -> api.management.v1.ListApiRequest
	72, // 94: api.management.v1.Management.BaseInformation:output_type -> api.management.v1.BaseInfoReply
	74, // 95: api.management.v1.Management.CreateTestPlan:output_type -> api.management.v1.CreateTestPlanReply
	76, // 96: api.management.v1.Management.UpdateTestPlan:output_type -> google.protobuf.Empty
	70, // 97: api.management.v1.Management.GetTestPlaById:output_type -> api.management.v1.GetTestPlanReply
	65, // 98: api.management.v1.Management.CreateProject:output_type -> api.management.v1.CreateProjectReply
	76, // 99: api.management.v1.Management.UpdateProject:output_type -> google.protobuf.Empty
	61, // 100: api.management.v1.Management.DeleteProject:output_type -> api.management.v1.DeleteProjectReply
	68, // 101: api.management.v1.Management.GetProject:output_type -> api.management.v1.ProjectInfo
	67, // 102: api.management.v1.Management.ListProject:output_type -> api.management.v1.ListProjectReply
	67, // 103: api.management.v1.Management.GetUserProjectList:output_type -> api.management.v1.ListProjectReply
	58, // 104: api.management.v1.Management.CreateTestcase:output_type -> api.management.v1.CreateTestcaseReply
	56, // 105: api.management.v1.Management.GenerateTestcase:output_type -> api.management.v1.GenerateTestcaseFileReply
	47, // 106: api.management.v1.Management.UpdateTestcase:output_type -> api.management.v1.UpdateTestcaseReply
	49, // 107: api.management.v1.Management.DeleteTestcase:output_type -> api.management.v1.DeleteTestcaseReply
	52, // 108: api.management.v1.Management.GetTestcaseById:output_type -> api.management.v1.GetTestcaseReply
	54, // 109: api.management.v1.Management.ListTestcase:output_type -> api.management.v1.ListTestcaseReply
	44, // 110: api.management.v1.Management.DebugTestcase:output_type -> api.management.v1.DebugTestcaseReply
	42, // 111: api.management.v1.Management.LoadFramework:output_type -> api.management.v1.LoadFrameworkReply
	40, // 112: api.management.v1.Management.CreateTestcaseSuite:output_type -> api.management.v1.CreateTestcaseSuiteReply
	38, // 113: api.management.v1.Management.GetTestcaseSuite:output_type -> api.management.v1.GetTestcaseSuiteReply
	26, // 114: api.management.v1.Management.CreateTask:output_type -> api.management.v1.CreateTaskReply
	76, // 115: api.management.v1.Management.UpdateTask:output_type -> google.protobuf.Empty
	30, // 116: api.management.v1.Management.DeleteTask:output_type -> api.management.v1.DeleteTaskReply
	33, // 117: api.management.v1.Management.TaskByID:output_type -> api.management.v1.GetTaskReply
	33, // 118: api.management.v1.Management.TaskByName:output_type -> api.management.v1.GetTaskReply
	36, // 119: api.management.v1.Management.ListTimingTask:output_type -> api.management.v1.ListTimingTaskReply
	24, // 120: api.management.v1.Management.UpdateTaskStatus:output_type -> api.management.v1.UpdateTaskStatusReply
	21, // 121: api.management.v1.Management.GetTaskProgress:output_type -> api.management.v1.TaskProgressReply
	10, // 122: api.management.v1.Management.CreateApi:output_type -> api.management.v1.CreateApiReply
	13, // 123: api.management.v1.Management.UpdateApi:output_type -> api.management.v1.UpdateApiReply
	15, // 124: api.management.v1.Management.DeleteApi:output_type -> api.management.v1.DeleteApiReply
	17, // 125: api.management.v1.Management.GetApi:output_type -> api.management.v1.GetApiReply
	8,  // 126: api.management.v1.Management.DebugApi:output_type -> api.management.v1.DebugApiReply
	19, // 127: api.management.v1.Management.ListApi:output_type -> api.management.v1.ListApiReply
	94, // [94:128] is the sub-list for method output_type
	60, // [60:94] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_api_management_v1_management_proto_init() }
func file_api_management_v1_management_proto_init() {
	if File_api_management_v1_management_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_management_v1_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseInfoApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseInfoApiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugApiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskProgressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimingTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimingTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestcaseSuiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestcaseSuiteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestcaseSuiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestcaseSuiteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadFrameworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadFrameworkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestcaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTestcaseFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTestcaseFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestcaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestcaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_management_v1_management_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_management_v1_management_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   70,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_management_v1_management_proto_goTypes,
		DependencyIndexes: file_api_management_v1_management_proto_depIdxs,
		EnumInfos:         file_api_management_v1_management_proto_enumTypes,
		MessageInfos:      file_api_management_v1_management_proto_msgTypes,
	}.Build()
	File_api_management_v1_management_proto = out.File
	file_api_management_v1_management_proto_rawDesc = nil
	file_api_management_v1_management_proto_goTypes = nil
	file_api_management_v1_management_proto_depIdxs = nil
}
