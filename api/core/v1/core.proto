syntax = "proto3";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/empty.proto";

package api.core.v1;

option go_package = "galileo/api/core/v1;v1";
option java_multiple_files = true;
option java_package = "api.core.v1";

service Core {
  rpc Register (RegisterRequest) returns (RegisterReply){
    option (google.api.http) = {
      post: "v1/api/user/register",
      body: "*"
    };
  };
  rpc Login (LoginRequest) returns (LoginReply){
    option (google.api.http) = {
      post: "v1/api/user/login"
      body: "*"
    };
  };
  rpc Unregister (UnregisterRequest) returns (UnregisterReply){
    option (google.api.http) = {
      delete: "v1/api/user/unregister"
    };
  };
  rpc Logout (google.protobuf.Empty) returns (google.protobuf.Empty){
    option(google.api.http) = {
      post: "v1/api/user/logout"
      body: "*"
    };
  };
  rpc DeleteUser (DeleteRequest) returns (DeleteReply){
    option (google.api.http) = {
      delete: "v1/api/user/delete/{id}"
    };
  };
  rpc UserDetail (google.protobuf.Empty) returns (UserDetailReply){
    option(google.api.http) = {
      get: "v1/api/user/detail"
    };
  };
  rpc UpdateUserInfo(UserInfoUpdateRequest) returns (UserInfoUpdateReply) {
    option(google.api.http) = {
      put: "v1/api/user/update"
      body: "*"
    };
  };
  rpc UpdatePassword(UpdatePasswordRequest) returns (google.protobuf.Empty){
    option(google.api.http) = {
      put: "v1/api/user/password"
      body: "*"
    };
  }
  rpc UpdateEmail(UpdateEmailRequest) returns (UpdateEmailReply) {
    option(google.api.http) = {
      put: "v1/api/user/email"
      body: "*"
    };
  }
  rpc UpdatePhone(UpdatePhoneRequest) returns (UpdatePhoneReply) {
    option(google.api.http) = {
      put: "v1/api/user/phone"
      body: "*"
    };
  }
  rpc ListUser (ListUserRequest) returns (ListUserReply){
    option(google.api.http) = {
      get: "v1/api/user/list/{pageNum}/{pageSize}"
    };
  }
}

message UpdatePhoneRequest {}

message UpdatePhoneReply {}

message UpdateEmailRequest {}

message UpdateEmailReply {}

message UpdatePasswordRequest {
  string password = 1[(validate.rules).string = {min_len: 8}];
}

message DeleteRequest{
  uint32 id = 1;
}

message DeleteReply{
  message DeleteInfo{
    uint32 id = 1;
    int64 deleteAt = 2;
    uint32 deleteBy = 3;
  };
  DeleteInfo data = 1;
}

message ListUserRequest {
  int32 pageNum = 1;
  int32 pageSize = 2;
}

message ListUserReply {
  int32 total = 1;
  repeated UserDetail userList = 2;
}

message UserInfoUpdateRequest {
  string nickname = 1 [(validate.rules).string = {min_len:1, max_len:24}];
  string email = 2 [(validate.rules).string.email = true];
  string phone = 3 [(validate.rules).string.len = 11];
}

message UserInfoUpdateReply {
  bool success = 1;
}

message RegisterRequest {
  string username = 1 [(validate.rules).string = {min_len: 3, max_len:16}];
  string password = 2 [(validate.rules).string = {min_len: 8}];
  string phone = 3 [(validate.rules).string.len = 11];
  string email = 4 [(validate.rules).string.email = true];
}

message RegisterReply {
  uint32 id = 1;
  string username = 2;
  int64 createdAt = 3;
}

message LoginRequest{
  string username = 1 ;
  string password = 2 ;
}

message LoginReply{
  string type = 1;
  string token = 2;
  int64 expiresAt = 3;
}

message TokenInfo{
  string type = 1;
  string token = 2;
  int64 expiresAt = 3;
}

message UnregisterRequest {}
message UnregisterReply {}

message UserDetail {
  uint32 id = 1;
  string username = 2;
  string nickname = 3;
  string chineseName = 4;
  string phone = 5;
  string email = 6;
  int32 role = 7;
}
message UserDetailReply {
  UserDetail data = 1;
}