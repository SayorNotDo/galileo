// Code generated by ent, DO NOT EDIT.

package testcase

import (
	"time"
)

const (
	// Label holds the string label denoting the testcase type in the database.
	Label = "testcase"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldDeletedBy holds the string denoting the deleted_by field in the database.
	FieldDeletedBy = "deleted_by"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldLabel holds the string denoting the label field in the database.
	FieldLabel = "label"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeTestcaseSuite holds the string denoting the testcase_suite edge name in mutations.
	EdgeTestcaseSuite = "testcase_suite"
	// Table holds the table name of the testcase in the database.
	Table = "testcase"
	// TestcaseSuiteTable is the table that holds the testcase_suite relation/edge. The primary key declared below.
	TestcaseSuiteTable = "testcase_suite_testcase"
	// TestcaseSuiteInverseTable is the table name for the TestcaseSuite entity.
	// It exists in this package in order to avoid circular dependency with the "testcasesuite" package.
	TestcaseSuiteInverseTable = "testcase_suite"
)

// Columns holds all SQL columns for testcase fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreatedBy,
	FieldCreatedAt,
	FieldUpdatedBy,
	FieldUpdatedAt,
	FieldStatus,
	FieldType,
	FieldPriority,
	FieldDeletedAt,
	FieldDeletedBy,
	FieldDescription,
	FieldLabel,
	FieldURL,
}

var (
	// TestcaseSuitePrimaryKey and TestcaseSuiteColumn2 are the table columns denoting the
	// primary key for the testcase_suite relation (M2M).
	TestcaseSuitePrimaryKey = []string{"testcase_suite_id", "testcase_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType int8
	// DefaultPriority holds the default value on creation for the "priority" field.
	DefaultPriority int8
)
