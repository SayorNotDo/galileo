// Code generated by ent, DO NOT EDIT.

package testcasesuite

import (
	"time"
)

const (
	// Label holds the string label denoting the testcasesuite type in the database.
	Label = "test_case_suite"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// EdgeTestcase holds the string denoting the testcase edge name in mutations.
	EdgeTestcase = "testcase"
	// Table holds the table name of the testcasesuite in the database.
	Table = "test_case_suites"
	// TestcaseTable is the table that holds the testcase relation/edge.
	TestcaseTable = "test_cases"
	// TestcaseInverseTable is the table name for the TestCase entity.
	// It exists in this package in order to avoid circular dependency with the "testcase" package.
	TestcaseInverseTable = "test_cases"
	// TestcaseColumn is the table column denoting the testcase relation/edge.
	TestcaseColumn = "test_case_suite_testcase"
)

// Columns holds all SQL columns for testcasesuite fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreatedAt,
	FieldCreatedBy,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
