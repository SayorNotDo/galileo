// Code generated by ent, DO NOT EDIT.

package task

import (
	"time"
)

const (
	// Label holds the string label denoting the task type in the database.
	Label = "task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldRank holds the string denoting the rank field in the database.
	FieldRank = "rank"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCompleteAt holds the string denoting the complete_at field in the database.
	FieldCompleteAt = "complete_at"
	// FieldUpdateAt holds the string denoting the update_at field in the database.
	FieldUpdateAt = "update_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldDeletedBy holds the string denoting the deleted_by field in the database.
	FieldDeletedBy = "deleted_by"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeTestcaseSuite holds the string denoting the testcasesuite edge name in mutations.
	EdgeTestcaseSuite = "testcaseSuite"
	// Table holds the table name of the task in the database.
	Table = "task"
	// TestcaseSuiteTable is the table that holds the testcaseSuite relation/edge.
	TestcaseSuiteTable = "test_case_suites"
	// TestcaseSuiteInverseTable is the table name for the TestCaseSuite entity.
	// It exists in this package in order to avoid circular dependency with the "testcasesuite" package.
	TestcaseSuiteInverseTable = "test_case_suites"
	// TestcaseSuiteColumn is the table column denoting the testcaseSuite relation/edge.
	TestcaseSuiteColumn = "task_testcase_suite"
)

// Columns holds all SQL columns for task fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreatedAt,
	FieldCreatedBy,
	FieldRank,
	FieldType,
	FieldStatus,
	FieldCompleteAt,
	FieldUpdateAt,
	FieldDeletedAt,
	FieldDeletedBy,
	FieldDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultRank holds the default value on creation for the "rank" field.
	DefaultRank int8
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
	// UpdateDefaultUpdateAt holds the default value on update for the "update_at" field.
	UpdateDefaultUpdateAt func() time.Time
)
