// Code generated by ent, DO NOT EDIT.

package ent

import (
	"galileo/ent/group"
	"galileo/ent/project"
	"galileo/ent/schema"
	"galileo/ent/task"
	"galileo/ent/testcase"
	"galileo/ent/testcasesuite"
	"galileo/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[2].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescCreatedAt is the schema descriptor for created_at field.
	projectDescCreatedAt := projectFields[3].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the created_at field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	// projectDescUpdatedAt is the schema descriptor for updated_at field.
	projectDescUpdatedAt := projectFields[5].Descriptor()
	// project.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	project.UpdateDefaultUpdatedAt = projectDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectDescStatus is the schema descriptor for status field.
	projectDescStatus := projectFields[9].Descriptor()
	// project.DefaultStatus holds the default value on creation for the status field.
	project.DefaultStatus = projectDescStatus.Default.(int8)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskFields[2].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescStatus is the schema descriptor for status field.
	taskDescStatus := taskFields[6].Descriptor()
	// task.DefaultStatus holds the default value on creation for the status field.
	task.DefaultStatus = taskDescStatus.Default.(int8)
	// taskDescUpdateAt is the schema descriptor for update_at field.
	taskDescUpdateAt := taskFields[8].Descriptor()
	// task.UpdateDefaultUpdateAt holds the default value on update for the update_at field.
	task.UpdateDefaultUpdateAt = taskDescUpdateAt.UpdateDefault.(func() time.Time)
	testcaseFields := schema.TestCase{}.Fields()
	_ = testcaseFields
	// testcaseDescName is the schema descriptor for name field.
	testcaseDescName := testcaseFields[1].Descriptor()
	// testcase.NameValidator is a validator for the "name" field. It is called by the builders before save.
	testcase.NameValidator = testcaseDescName.Validators[0].(func(string) error)
	// testcaseDescCreatedAt is the schema descriptor for created_at field.
	testcaseDescCreatedAt := testcaseFields[3].Descriptor()
	// testcase.DefaultCreatedAt holds the default value on creation for the created_at field.
	testcase.DefaultCreatedAt = testcaseDescCreatedAt.Default.(func() time.Time)
	// testcaseDescUpdateAt is the schema descriptor for update_at field.
	testcaseDescUpdateAt := testcaseFields[5].Descriptor()
	// testcase.UpdateDefaultUpdateAt holds the default value on update for the update_at field.
	testcase.UpdateDefaultUpdateAt = testcaseDescUpdateAt.UpdateDefault.(func() time.Time)
	// testcaseDescStatus is the schema descriptor for status field.
	testcaseDescStatus := testcaseFields[6].Descriptor()
	// testcase.DefaultStatus holds the default value on creation for the status field.
	testcase.DefaultStatus = testcaseDescStatus.Default.(int8)
	// testcaseDescType is the schema descriptor for type field.
	testcaseDescType := testcaseFields[7].Descriptor()
	// testcase.DefaultType holds the default value on creation for the type field.
	testcase.DefaultType = testcaseDescType.Default.(int8)
	// testcaseDescPriority is the schema descriptor for priority field.
	testcaseDescPriority := testcaseFields[8].Descriptor()
	// testcase.DefaultPriority holds the default value on creation for the priority field.
	testcase.DefaultPriority = testcaseDescPriority.Default.(int8)
	testcasesuiteFields := schema.TestCaseSuite{}.Fields()
	_ = testcasesuiteFields
	// testcasesuiteDescCreatedAt is the schema descriptor for created_at field.
	testcasesuiteDescCreatedAt := testcasesuiteFields[1].Descriptor()
	// testcasesuite.DefaultCreatedAt holds the default value on creation for the created_at field.
	testcasesuite.DefaultCreatedAt = testcasesuiteDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[2].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
	// userDescRole is the schema descriptor for role field.
	userDescRole := userFields[10].Descriptor()
	// user.DefaultRole holds the default value on creation for the role field.
	user.DefaultRole = userDescRole.Default.(uint8)
	// userDescUpdateAt is the schema descriptor for update_at field.
	userDescUpdateAt := userFields[11].Descriptor()
	// user.DefaultUpdateAt holds the default value on creation for the update_at field.
	user.DefaultUpdateAt = userDescUpdateAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdateAt holds the default value on update for the update_at field.
	user.UpdateDefaultUpdateAt = userDescUpdateAt.UpdateDefault.(func() time.Time)
	// userDescIsDeleted is the schema descriptor for is_deleted field.
	userDescIsDeleted := userFields[14].Descriptor()
	// user.DefaultIsDeleted holds the default value on creation for the is_deleted field.
	user.DefaultIsDeleted = userDescIsDeleted.Default.(bool)
	// userDescUUID is the schema descriptor for uuid field.
	userDescUUID := userFields[15].Descriptor()
	// user.DefaultUUID holds the default value on creation for the uuid field.
	user.DefaultUUID = userDescUUID.Default.(func() uuid.UUID)
}
