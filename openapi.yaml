# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Core API
    version: 0.0.1
paths:
    data/report:
        post:
            tags:
                - Core
            operationId: Core_DataReportTrack
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DataReportTrackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/engine/container/{id}:
        get:
            tags:
                - Core
            operationId: Core_InspectContainer
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContainerInfo'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/execute-token:
        post:
            tags:
                - Core
            operationId: Core_ExecuteToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExecuteTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExecuteTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/delete/{id}:
        delete:
            tags:
                - Core
            operationId: Core_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/email:
        put:
            tags:
                - Core
            operationId: Core_UpdateEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmailReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/group:
        put:
            tags:
                - Core
            operationId: Core_UpdateGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Core
            operationId: Core_CreateGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGroupReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/group/list:
        get:
            tags:
                - Core
            operationId: Core_GetUserGroupList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserGroupListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/info:
        get:
            tags:
                - Core
            operationId: Core_UserDetail
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserDetailReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/latest-activity:
        get:
            tags:
                - Core
            operationId: Core_GetUserLatestActivity
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserLatestActivityReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/list/{pageNum}/{pageSize}:
        get:
            tags:
                - Core
            operationId: Core_ListUser
            parameters:
                - name: pageNum
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/login:
        post:
            tags:
                - Core
            operationId: Core_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/logout:
        post:
            tags:
                - Core
            operationId: Core_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/password:
        put:
            tags:
                - Core
            operationId: Core_UpdatePassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/phone:
        put:
            tags:
                - Core
            operationId: Core_UpdatePhone
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePhoneReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/project/list:
        get:
            tags:
                - Core
            operationId: Core_GetUserProjectList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserProjectListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/register:
        post:
            tags:
                - Core
            operationId: Core_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/unregister:
        delete:
            tags:
                - Core
            operationId: Core_Unregister
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnregisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    v1/api/user/update:
        put:
            tags:
                - Core
            operationId: Core_UpdateUserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInfoUpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoUpdateReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        ContainerInfo:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                image:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
        CreateGroupReply:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                success:
                    type: boolean
        CreateGroupRequest:
            type: object
            properties:
                name:
                    type: string
        DataReportTrackRequest:
            type: object
            properties:
                data:
                    type: string
        DeleteReply:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/DeleteReply_DeleteInfo'
        DeleteReply_DeleteInfo:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                deleteAt:
                    type: string
                    format: date-time
                deletedBy:
                    type: integer
                    format: uint32
        ExecuteTokenReply:
            type: object
            properties:
                executeToken:
                    type: string
        ExecuteTokenRequest:
            type: object
            properties:
                machine:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        GroupInfo:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
                avatar:
                    type: string
                description:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: integer
                    format: uint32
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: integer
                    format: uint32
                deletedAt:
                    type: string
                    format: date-time
                deletedBy:
                    type: integer
                    format: uint32
                headcount:
                    type: integer
                    format: int32
        ListUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                userList:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserDetail'
        LoginReply:
            type: object
            properties:
                type:
                    type: string
                token:
                    type: string
                expiresAt:
                    type: string
                    format: date-time
        LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        LogoutRequest:
            type: object
            properties: {}
        ProjectInfo:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
                identifier:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: integer
                    format: uint32
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: integer
                    format: uint32
                deletedAt:
                    type: string
                    format: date-time
                deletedBy:
                    type: integer
                    format: uint32
                startTime:
                    type: string
                    format: date-time
                deadline:
                    type: string
                    format: date-time
                description:
                    type: string
                remark:
                    type: string
        RegisterReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                username:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                phone:
                    type: string
                email:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UnregisterReply:
            type: object
            properties: {}
        UpdateEmailReply:
            type: object
            properties: {}
        UpdateEmailRequest:
            type: object
            properties: {}
        UpdateGroupRequest:
            type: object
            properties: {}
        UpdatePasswordRequest:
            type: object
            properties:
                password:
                    type: string
        UpdatePhoneReply:
            type: object
            properties: {}
        UpdatePhoneRequest:
            type: object
            properties: {}
        UserDetail:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                nickname:
                    type: string
                chineseName:
                    type: string
                phone:
                    type: string
                email:
                    type: string
                role:
                    type: integer
                    format: int32
        UserDetailReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                nickname:
                    type: string
                chineseName:
                    type: string
                phone:
                    type: string
                email:
                    type: string
                role:
                    type: integer
                    format: int32
        UserGroup:
            type: object
            properties:
                groupMemberId:
                    type: integer
                    format: int32
                role:
                    type: integer
                    format: int32
                group:
                    $ref: '#/components/schemas/GroupInfo'
        UserGroupListReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                groupList:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserGroup'
        UserInfoUpdateReply:
            type: object
            properties:
                success:
                    type: boolean
        UserInfoUpdateRequest:
            type: object
            properties:
                nickname:
                    type: string
                email:
                    type: string
                phone:
                    type: string
        UserLatestActivityReply:
            type: object
            properties: {}
        UserProjectListReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                projectList:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectInfo'
tags:
    - name: Core
